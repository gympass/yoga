// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`<Dropdown /> Snapshots should match snapshot 1`] = `
<View
  accessibilityRole="button"
  accessibilityState={
    {
      "busy": undefined,
      "checked": undefined,
      "disabled": undefined,
      "expanded": undefined,
      "selected": undefined,
    }
  }
  accessible={true}
  focusable={true}
  onClick={[Function]}
  onResponderGrant={[Function]}
  onResponderMove={[Function]}
  onResponderRelease={[Function]}
  onResponderTerminate={[Function]}
  onResponderTerminationRequest={[Function]}
  onStartShouldSetResponder={[Function]}
>
  <View
    disabled={false}
    full={false}
    style={
      [
        {
          "alignItems": "center",
          "backgroundColor": "#FFFFFF",
          "borderColor": "#D7D7E0",
          "borderRadius": 8,
          "borderStyle": "solid",
          "borderWidth": 1,
          "flexDirection": "row",
          "justifyContent": "space-between",
          "paddingBottom": 16,
          "paddingLeft": 16,
          "paddingRight": 16,
          "paddingTop": 16,
          "position": "relative",
          "width": 320,
        },
      ]
    }
  >
    <Text
      disabled={false}
      fontSize="medium"
      inverted={false}
      light={false}
      style={
        [
          {
            "color": "#6B6B78",
            "fontFamily": "Rubik",
            "fontSize": 16,
            "fontWeight": "400",
            "lineHeight": 24,
          },
        ]
      }
    >
      Find an activity to love
    </Text>
    <RNSVGSvgView
      bbHeight={20}
      bbWidth={20}
      fill="#6B6B78"
      focusable={false}
      height={20}
      style={
        [
          {
            "backgroundColor": "transparent",
            "borderWidth": 0,
          },
          undefined,
          {
            "opacity": 1,
          },
          {
            "flex": 0,
            "height": 20,
            "width": 20,
          },
        ]
      }
      width={20}
    >
      <RNSVGGroup
        fill={
          [
            0,
            4285229944,
          ]
        }
        fillOpacity={1}
        fillRule={1}
        font={{}}
        matrix={
          [
            1,
            0,
            0,
            1,
            0,
            0,
          ]
        }
        opacity={1}
        originX={0}
        originY={0}
        propList={
          [
            "fill",
          ]
        }
        rotation={0}
        scaleX={1}
        scaleY={1}
        skewX={0}
        skewY={0}
        stroke={null}
        strokeDasharray={null}
        strokeDashoffset={null}
        strokeLinecap={0}
        strokeLinejoin={0}
        strokeMiterlimit={4}
        strokeOpacity={1}
        strokeWidth={1}
        vectorEffect={0}
        x={0}
        y={0}
      />
    </RNSVGSvgView>
  </View>
</View>
`;

exports[`<Dropdown /> Snapshots should match snapshot when disabled 1`] = `
<View
  accessibilityRole="button"
  accessibilityState={
    {
      "busy": undefined,
      "checked": undefined,
      "disabled": undefined,
      "expanded": undefined,
      "selected": undefined,
    }
  }
  accessible={true}
  focusable={true}
  onClick={[Function]}
  onResponderGrant={[Function]}
  onResponderMove={[Function]}
  onResponderRelease={[Function]}
  onResponderTerminate={[Function]}
  onResponderTerminationRequest={[Function]}
  onStartShouldSetResponder={[Function]}
>
  <View
    disabled={true}
    full={false}
    style={
      [
        {
          "alignItems": "center",
          "backgroundColor": "#FFFFFF",
          "borderColor": "#F5F5FA",
          "borderRadius": 8,
          "borderStyle": "solid",
          "borderWidth": 1,
          "flexDirection": "row",
          "justifyContent": "space-between",
          "paddingBottom": 16,
          "paddingLeft": 16,
          "paddingRight": 16,
          "paddingTop": 16,
          "position": "relative",
          "width": 320,
        },
      ]
    }
  >
    <Text
      disabled={true}
      fontSize="medium"
      inverted={false}
      light={false}
      style={
        [
          {
            "color": "#D7D7E0",
            "fontFamily": "Rubik",
            "fontSize": 16,
            "fontWeight": "400",
            "lineHeight": 24,
          },
        ]
      }
    >
      Find an activity to love
    </Text>
    <RNSVGSvgView
      bbHeight={20}
      bbWidth={20}
      fill="#D7D7E0"
      focusable={false}
      height={20}
      style={
        [
          {
            "backgroundColor": "transparent",
            "borderWidth": 0,
          },
          undefined,
          {
            "opacity": 1,
          },
          {
            "flex": 0,
            "height": 20,
            "width": 20,
          },
        ]
      }
      width={20}
    >
      <RNSVGGroup
        fill={
          [
            0,
            4292335584,
          ]
        }
        fillOpacity={1}
        fillRule={1}
        font={{}}
        matrix={
          [
            1,
            0,
            0,
            1,
            0,
            0,
          ]
        }
        opacity={1}
        originX={0}
        originY={0}
        propList={
          [
            "fill",
          ]
        }
        rotation={0}
        scaleX={1}
        scaleY={1}
        skewX={0}
        skewY={0}
        stroke={null}
        strokeDasharray={null}
        strokeDashoffset={null}
        strokeLinecap={0}
        strokeLinejoin={0}
        strokeMiterlimit={4}
        strokeOpacity={1}
        strokeWidth={1}
        vectorEffect={0}
        x={0}
        y={0}
      />
    </RNSVGSvgView>
  </View>
</View>
`;

exports[`<Dropdown /> Snapshots should match snapshot when full 1`] = `
<View
  accessibilityRole="button"
  accessibilityState={
    {
      "busy": undefined,
      "checked": undefined,
      "disabled": undefined,
      "expanded": undefined,
      "selected": undefined,
    }
  }
  accessible={true}
  focusable={true}
  onClick={[Function]}
  onResponderGrant={[Function]}
  onResponderMove={[Function]}
  onResponderRelease={[Function]}
  onResponderTerminate={[Function]}
  onResponderTerminationRequest={[Function]}
  onStartShouldSetResponder={[Function]}
>
  <View
    disabled={false}
    full={true}
    style={
      [
        {
          "alignItems": "center",
          "backgroundColor": "#FFFFFF",
          "borderColor": "#D7D7E0",
          "borderRadius": 8,
          "borderStyle": "solid",
          "borderWidth": 1,
          "flexDirection": "row",
          "justifyContent": "space-between",
          "paddingBottom": 16,
          "paddingLeft": 16,
          "paddingRight": 16,
          "paddingTop": 16,
          "position": "relative",
          "width": "100%",
        },
      ]
    }
  >
    <Text
      disabled={false}
      fontSize="medium"
      inverted={false}
      light={false}
      style={
        [
          {
            "color": "#6B6B78",
            "fontFamily": "Rubik",
            "fontSize": 16,
            "fontWeight": "400",
            "lineHeight": 24,
          },
        ]
      }
    >
      Find an activity to love
    </Text>
    <RNSVGSvgView
      bbHeight={20}
      bbWidth={20}
      fill="#6B6B78"
      focusable={false}
      height={20}
      style={
        [
          {
            "backgroundColor": "transparent",
            "borderWidth": 0,
          },
          undefined,
          {
            "opacity": 1,
          },
          {
            "flex": 0,
            "height": 20,
            "width": 20,
          },
        ]
      }
      width={20}
    >
      <RNSVGGroup
        fill={
          [
            0,
            4285229944,
          ]
        }
        fillOpacity={1}
        fillRule={1}
        font={{}}
        matrix={
          [
            1,
            0,
            0,
            1,
            0,
            0,
          ]
        }
        opacity={1}
        originX={0}
        originY={0}
        propList={
          [
            "fill",
          ]
        }
        rotation={0}
        scaleX={1}
        scaleY={1}
        skewX={0}
        skewY={0}
        stroke={null}
        strokeDasharray={null}
        strokeDashoffset={null}
        strokeLinecap={0}
        strokeLinejoin={0}
        strokeMiterlimit={4}
        strokeOpacity={1}
        strokeWidth={1}
        vectorEffect={0}
        x={0}
        y={0}
      />
    </RNSVGSvgView>
  </View>
</View>
`;

exports[`<Dropdown /> Snapshots should match snapshot when has a selected value 1`] = `
<View
  accessibilityRole="button"
  accessibilityState={
    {
      "busy": undefined,
      "checked": undefined,
      "disabled": undefined,
      "expanded": undefined,
      "selected": undefined,
    }
  }
  accessible={true}
  focusable={true}
  onClick={[Function]}
  onResponderGrant={[Function]}
  onResponderMove={[Function]}
  onResponderRelease={[Function]}
  onResponderTerminate={[Function]}
  onResponderTerminationRequest={[Function]}
  onStartShouldSetResponder={[Function]}
>
  <View
    disabled={true}
    full={false}
    selected={
      {
        "label": "Swimming",
        "selected": true,
        "value": "swimming",
      }
    }
    style={
      [
        {
          "alignItems": "center",
          "backgroundColor": "#FFFFFF",
          "borderColor": "#231B22",
          "borderRadius": 8,
          "borderStyle": "solid",
          "borderWidth": 1,
          "flexDirection": "row",
          "justifyContent": "space-between",
          "paddingBottom": 16,
          "paddingLeft": 16,
          "paddingRight": 16,
          "paddingTop": 16,
          "position": "relative",
          "width": 320,
        },
      ]
    }
  >
    <Text
      disabled={true}
      fontSize="medium"
      inverted={false}
      light={false}
      selected={
        {
          "label": "Swimming",
          "selected": true,
          "value": "swimming",
        }
      }
      style={
        [
          {
            "color": "#231B22",
            "fontFamily": "Rubik",
            "fontSize": 16,
            "fontWeight": "400",
            "lineHeight": 24,
          },
        ]
      }
    >
      Swimming
    </Text>
    <RNSVGSvgView
      bbHeight={20}
      bbWidth={20}
      fill="#D7D7E0"
      focusable={false}
      height={20}
      style={
        [
          {
            "backgroundColor": "transparent",
            "borderWidth": 0,
          },
          undefined,
          {
            "opacity": 1,
          },
          {
            "flex": 0,
            "height": 20,
            "width": 20,
          },
        ]
      }
      width={20}
    >
      <RNSVGGroup
        fill={
          [
            0,
            4292335584,
          ]
        }
        fillOpacity={1}
        fillRule={1}
        font={{}}
        matrix={
          [
            1,
            0,
            0,
            1,
            0,
            0,
          ]
        }
        opacity={1}
        originX={0}
        originY={0}
        propList={
          [
            "fill",
          ]
        }
        rotation={0}
        scaleX={1}
        scaleY={1}
        skewX={0}
        skewY={0}
        stroke={null}
        strokeDasharray={null}
        strokeDashoffset={null}
        strokeLinecap={0}
        strokeLinejoin={0}
        strokeMiterlimit={4}
        strokeOpacity={1}
        strokeWidth={1}
        vectorEffect={0}
        x={0}
        y={0}
      />
    </RNSVGSvgView>
  </View>
</View>
`;

exports[`<Dropdown /> Snapshots should match snapshot with error 1`] = `
<View
  accessibilityRole="button"
  accessibilityState={
    {
      "busy": undefined,
      "checked": undefined,
      "disabled": undefined,
      "expanded": undefined,
      "selected": undefined,
    }
  }
  accessible={true}
  focusable={true}
  onClick={[Function]}
  onResponderGrant={[Function]}
  onResponderMove={[Function]}
  onResponderRelease={[Function]}
  onResponderTerminate={[Function]}
  onResponderTerminationRequest={[Function]}
  onStartShouldSetResponder={[Function]}
>
  <View
    disabled={false}
    error="Please, select one activity"
    full={false}
    selected={
      {
        "label": "Swimming",
        "selected": true,
        "value": "swimming",
      }
    }
    style={
      [
        {
          "alignItems": "center",
          "backgroundColor": "#FFFFFF",
          "borderColor": "#231B22",
          "borderRadius": 8,
          "borderStyle": "solid",
          "borderWidth": 1,
          "flexDirection": "row",
          "justifyContent": "space-between",
          "paddingBottom": 16,
          "paddingLeft": 16,
          "paddingRight": 16,
          "paddingTop": 16,
          "position": "relative",
          "width": 320,
        },
      ]
    }
  >
    <Text
      disabled={false}
      fontSize="medium"
      inverted={false}
      light={false}
      selected={
        {
          "label": "Swimming",
          "selected": true,
          "value": "swimming",
        }
      }
      style={
        [
          {
            "color": "#231B22",
            "fontFamily": "Rubik",
            "fontSize": 16,
            "fontWeight": "400",
            "lineHeight": 24,
          },
        ]
      }
    >
      Swimming
    </Text>
    <RNSVGSvgView
      bbHeight={20}
      bbWidth={20}
      fill="#231B22"
      focusable={false}
      height={20}
      style={
        [
          {
            "backgroundColor": "transparent",
            "borderWidth": 0,
          },
          undefined,
          {
            "opacity": 1,
          },
          {
            "flex": 0,
            "height": 20,
            "width": 20,
          },
        ]
      }
      width={20}
    >
      <RNSVGGroup
        fill={
          [
            0,
            4280490786,
          ]
        }
        fillOpacity={1}
        fillRule={1}
        font={{}}
        matrix={
          [
            1,
            0,
            0,
            1,
            0,
            0,
          ]
        }
        opacity={1}
        originX={0}
        originY={0}
        propList={
          [
            "fill",
          ]
        }
        rotation={0}
        scaleX={1}
        scaleY={1}
        skewX={0}
        skewY={0}
        stroke={null}
        strokeDasharray={null}
        strokeDashoffset={null}
        strokeLinecap={0}
        strokeLinejoin={0}
        strokeMiterlimit={4}
        strokeOpacity={1}
        strokeWidth={1}
        vectorEffect={0}
        x={0}
        y={0}
      />
    </RNSVGSvgView>
  </View>
</View>
`;
