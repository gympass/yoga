// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`<Input.Password /> Snapshots should match when input is focused 1`] = `
<View
  full={false}
  style={
    Array [
      Object {
        "position": "relative",
        "width": 320,
      },
    ]
  }
>
  <View
    full={false}
    style={
      Array [
        Object {
          "position": "relative",
          "width": 320,
        },
        Object {},
      ]
    }
  >
    <TextInput
      autoCompleteType="password"
      blurOnSubmit={false}
      cleanable={false}
      clearTextOnFocus={false}
      disabled={false}
      editable={true}
      focus={true}
      full={false}
      onBlur={[Function]}
      onFocus={[Function]}
      onSubmitEditing={[Function]}
      secureTextEntry={true}
      style={
        Array [
          Object {
            "borderColor": "#231B22",
            "borderRadius": 8,
            "borderStyle": "solid",
            "borderWidth": 1,
            "color": "#231B22",
            "fontFamily": "Rubik",
            "fontSize": 14,
            "paddingBottom": 16,
            "paddingLeft": 16,
            "paddingRight": 52,
            "paddingTop": 16,
            "width": 320,
          },
          Object {
            "height": 52,
          },
        ]
      }
      testID="input"
      textContentType="password"
      typed={false}
      value=""
    />
    <View
      collapsable={false}
      focus={true}
      pointerEvents="none"
      style={
        Object {
          "left": 14,
          "position": "absolute",
          "top": 24,
          "transform": Array [
            Object {
              "translateY": -8,
            },
          ],
        }
      }
      typed={false}
    >
      <Text
        collapsable={false}
        disabled={false}
        focus={true}
        style={
          Object {
            "backgroundColor": "#FFFFFF",
            "color": "#231B22",
            "fontFamily": "Rubik",
            "fontSize": 14,
            "paddingLeft": 4,
            "paddingRight": 4,
          }
        }
        typed={false}
      >
        Input
      </Text>
    </View>
  </View>
  <View
    accessibilityRole="button"
    accessible={true}
    disabled={false}
    focusable={true}
    onClick={[Function]}
    onResponderGrant={[Function]}
    onResponderMove={[Function]}
    onResponderRelease={[Function]}
    onResponderTerminate={[Function]}
    onResponderTerminationRequest={[Function]}
    onStartShouldSetResponder={[Function]}
    style={
      Array [
        Object {
          "paddingLeft": 8,
          "paddingRight": 16,
          "position": "absolute",
          "right": 0,
          "top": 0,
        },
      ]
    }
  >
    <RNSVGSvgView
      bbHeight={52}
      bbWidth={20}
      fill="#231B22"
      focusable={false}
      height={52}
      style={
        Array [
          Object {
            "backgroundColor": "transparent",
            "borderWidth": 0,
          },
          undefined,
          Object {
            "opacity": 1,
          },
          Object {
            "flex": 0,
            "height": 52,
            "width": 20,
          },
        ]
      }
      width={20}
    >
      <RNSVGGroup
        fill={
          Array [
            0,
            4280490786,
          ]
        }
        fillOpacity={1}
        fillRule={1}
        font={Object {}}
        matrix={
          Array [
            1,
            0,
            0,
            1,
            0,
            0,
          ]
        }
        opacity={1}
        originX={0}
        originY={0}
        propList={
          Array [
            "fill",
          ]
        }
        rotation={0}
        scaleX={1}
        scaleY={1}
        skewX={0}
        skewY={0}
        stroke={null}
        strokeDasharray={null}
        strokeDashoffset={null}
        strokeLinecap={0}
        strokeLinejoin={0}
        strokeMiterlimit={4}
        strokeOpacity={1}
        strokeWidth={1}
        vectorEffect={0}
        x={0}
        y={0}
      />
    </RNSVGSvgView>
  </View>
</View>
`;

exports[`<Input.Password /> Snapshots should match with default input 1`] = `
<View
  full={false}
  style={
    Array [
      Object {
        "position": "relative",
        "width": 320,
      },
    ]
  }
>
  <View
    full={false}
    style={
      Array [
        Object {
          "position": "relative",
          "width": 320,
        },
        Object {},
      ]
    }
  >
    <TextInput
      autoCompleteType="password"
      blurOnSubmit={false}
      cleanable={false}
      clearTextOnFocus={false}
      disabled={false}
      editable={true}
      focus={false}
      full={false}
      onBlur={[Function]}
      onFocus={[Function]}
      onSubmitEditing={[Function]}
      secureTextEntry={true}
      style={
        Array [
          Object {
            "borderColor": "#D7D7E0",
            "borderRadius": 8,
            "borderStyle": "solid",
            "borderWidth": 1,
            "color": "#6B6B78",
            "fontFamily": "Rubik",
            "fontSize": 14,
            "paddingBottom": 16,
            "paddingLeft": 16,
            "paddingRight": 52,
            "paddingTop": 16,
            "width": 320,
          },
          Object {
            "height": 52,
          },
        ]
      }
      textContentType="password"
      typed={false}
      value=""
    />
  </View>
  <View
    accessibilityRole="button"
    accessible={true}
    disabled={false}
    focusable={true}
    onClick={[Function]}
    onResponderGrant={[Function]}
    onResponderMove={[Function]}
    onResponderRelease={[Function]}
    onResponderTerminate={[Function]}
    onResponderTerminationRequest={[Function]}
    onStartShouldSetResponder={[Function]}
    style={
      Array [
        Object {
          "paddingLeft": 8,
          "paddingRight": 16,
          "position": "absolute",
          "right": 0,
          "top": 0,
        },
      ]
    }
  >
    <RNSVGSvgView
      bbHeight={52}
      bbWidth={20}
      fill="#6B6B78"
      focusable={false}
      height={52}
      style={
        Array [
          Object {
            "backgroundColor": "transparent",
            "borderWidth": 0,
          },
          undefined,
          Object {
            "opacity": 1,
          },
          Object {
            "flex": 0,
            "height": 52,
            "width": 20,
          },
        ]
      }
      width={20}
    >
      <RNSVGGroup
        fill={
          Array [
            0,
            4285229944,
          ]
        }
        fillOpacity={1}
        fillRule={1}
        font={Object {}}
        matrix={
          Array [
            1,
            0,
            0,
            1,
            0,
            0,
          ]
        }
        opacity={1}
        originX={0}
        originY={0}
        propList={
          Array [
            "fill",
          ]
        }
        rotation={0}
        scaleX={1}
        scaleY={1}
        skewX={0}
        skewY={0}
        stroke={null}
        strokeDasharray={null}
        strokeDashoffset={null}
        strokeLinecap={0}
        strokeLinejoin={0}
        strokeMiterlimit={4}
        strokeOpacity={1}
        strokeWidth={1}
        vectorEffect={0}
        x={0}
        y={0}
      />
    </RNSVGSvgView>
  </View>
</View>
`;

exports[`<Input.Password /> Snapshots should match with disabled input 1`] = `
<View
  full={false}
  style={
    Array [
      Object {
        "position": "relative",
        "width": 320,
      },
    ]
  }
>
  <View
    full={false}
    style={
      Array [
        Object {
          "position": "relative",
          "width": 320,
        },
        Object {},
      ]
    }
  >
    <TextInput
      autoCompleteType="password"
      blurOnSubmit={false}
      cleanable={false}
      clearTextOnFocus={false}
      disabled={true}
      editable={false}
      focus={false}
      full={false}
      onBlur={[Function]}
      onFocus={[Function]}
      onSubmitEditing={[Function]}
      secureTextEntry={true}
      style={
        Array [
          Object {
            "borderColor": "#D7D7E0",
            "borderRadius": 8,
            "borderStyle": "solid",
            "borderWidth": 1,
            "color": "#D7D7E0",
            "fontFamily": "Rubik",
            "fontSize": 14,
            "paddingBottom": 16,
            "paddingLeft": 16,
            "paddingRight": 52,
            "paddingTop": 16,
            "width": 320,
          },
          Object {
            "height": 52,
          },
        ]
      }
      textContentType="password"
      typed={false}
      value=""
    />
  </View>
  <View
    accessibilityRole="button"
    accessible={true}
    disabled={true}
    focusable={true}
    onClick={[Function]}
    onResponderGrant={[Function]}
    onResponderMove={[Function]}
    onResponderRelease={[Function]}
    onResponderTerminate={[Function]}
    onResponderTerminationRequest={[Function]}
    onStartShouldSetResponder={[Function]}
    style={
      Array [
        Object {
          "paddingLeft": 8,
          "paddingRight": 16,
          "position": "absolute",
          "right": 0,
          "top": 0,
        },
      ]
    }
  >
    <RNSVGSvgView
      bbHeight={52}
      bbWidth={20}
      fill="#F5F5FA"
      focusable={false}
      height={52}
      style={
        Array [
          Object {
            "backgroundColor": "transparent",
            "borderWidth": 0,
          },
          undefined,
          Object {
            "opacity": 1,
          },
          Object {
            "flex": 0,
            "height": 52,
            "width": 20,
          },
        ]
      }
      width={20}
    >
      <RNSVGGroup
        fill={
          Array [
            0,
            4294309370,
          ]
        }
        fillOpacity={1}
        fillRule={1}
        font={Object {}}
        matrix={
          Array [
            1,
            0,
            0,
            1,
            0,
            0,
          ]
        }
        opacity={1}
        originX={0}
        originY={0}
        propList={
          Array [
            "fill",
          ]
        }
        rotation={0}
        scaleX={1}
        scaleY={1}
        skewX={0}
        skewY={0}
        stroke={null}
        strokeDasharray={null}
        strokeDashoffset={null}
        strokeLinecap={0}
        strokeLinejoin={0}
        strokeMiterlimit={4}
        strokeOpacity={1}
        strokeWidth={1}
        vectorEffect={0}
        x={0}
        y={0}
      />
    </RNSVGSvgView>
  </View>
</View>
`;

exports[`<Input.Password /> Snapshots should match with full width 1`] = `
<View
  full={true}
  style={
    Array [
      Object {
        "position": "relative",
        "width": "100%",
      },
    ]
  }
>
  <View
    full={true}
    style={
      Array [
        Object {
          "position": "relative",
          "width": "100%",
        },
        Object {},
      ]
    }
  >
    <TextInput
      autoCompleteType="password"
      blurOnSubmit={false}
      cleanable={false}
      clearTextOnFocus={false}
      disabled={false}
      editable={true}
      focus={false}
      full={true}
      onBlur={[Function]}
      onFocus={[Function]}
      onSubmitEditing={[Function]}
      secureTextEntry={true}
      style={
        Array [
          Object {
            "borderColor": "#D7D7E0",
            "borderRadius": 8,
            "borderStyle": "solid",
            "borderWidth": 1,
            "color": "#6B6B78",
            "fontFamily": "Rubik",
            "fontSize": 14,
            "paddingBottom": 16,
            "paddingLeft": 16,
            "paddingRight": 52,
            "paddingTop": 16,
            "width": "100%",
          },
          Object {
            "height": 52,
          },
        ]
      }
      textContentType="password"
      typed={false}
      value=""
    />
    <View
      collapsable={false}
      focus={false}
      pointerEvents="none"
      style={
        Object {
          "left": 16,
          "position": "absolute",
          "top": 24,
          "transform": Array [
            Object {
              "translateY": -8,
            },
          ],
        }
      }
      typed={false}
    >
      <Text
        collapsable={false}
        disabled={false}
        focus={false}
        style={
          Object {
            "backgroundColor": "#FFFFFF",
            "color": "#6B6B78",
            "fontFamily": "Rubik",
            "fontSize": 14,
          }
        }
        typed={false}
      >
        Label
      </Text>
    </View>
  </View>
  <View
    accessibilityRole="button"
    accessible={true}
    disabled={false}
    focusable={true}
    onClick={[Function]}
    onResponderGrant={[Function]}
    onResponderMove={[Function]}
    onResponderRelease={[Function]}
    onResponderTerminate={[Function]}
    onResponderTerminationRequest={[Function]}
    onStartShouldSetResponder={[Function]}
    style={
      Array [
        Object {
          "paddingLeft": 8,
          "paddingRight": 16,
          "position": "absolute",
          "right": 0,
          "top": 0,
        },
      ]
    }
  >
    <RNSVGSvgView
      bbHeight={52}
      bbWidth={20}
      fill="#6B6B78"
      focusable={false}
      height={52}
      style={
        Array [
          Object {
            "backgroundColor": "transparent",
            "borderWidth": 0,
          },
          undefined,
          Object {
            "opacity": 1,
          },
          Object {
            "flex": 0,
            "height": 52,
            "width": 20,
          },
        ]
      }
      width={20}
    >
      <RNSVGGroup
        fill={
          Array [
            0,
            4285229944,
          ]
        }
        fillOpacity={1}
        fillRule={1}
        font={Object {}}
        matrix={
          Array [
            1,
            0,
            0,
            1,
            0,
            0,
          ]
        }
        opacity={1}
        originX={0}
        originY={0}
        propList={
          Array [
            "fill",
          ]
        }
        rotation={0}
        scaleX={1}
        scaleY={1}
        skewX={0}
        skewY={0}
        stroke={null}
        strokeDasharray={null}
        strokeDashoffset={null}
        strokeLinecap={0}
        strokeLinejoin={0}
        strokeMiterlimit={4}
        strokeOpacity={1}
        strokeWidth={1}
        vectorEffect={0}
        x={0}
        y={0}
      />
    </RNSVGSvgView>
  </View>
</View>
`;
