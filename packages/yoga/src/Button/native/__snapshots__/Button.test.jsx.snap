// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`<Button /> Snapshots disabled buttons With disabled prop should match snapshot with default Button 1`] = `
<View
  accessibilityState={
    Object {
      "disabled": true,
    }
  }
  accessible={true}
  focusable={false}
  onClick={[Function]}
  onResponderGrant={[Function]}
  onResponderMove={[Function]}
  onResponderRelease={[Function]}
  onResponderTerminate={[Function]}
  onResponderTerminationRequest={[Function]}
  onStartShouldSetResponder={[Function]}
  style={
    Object {
      "flexDirection": "row",
    }
  }
>
  <View
    disabled={true}
    full={false}
    inverted={false}
    pressed={false}
    secondary={false}
    small={false}
    style={
      Array [
        Object {
          "alignItems": "center",
          "backgroundColor": "#F5F5FA",
          "borderRadius": 9999,
          "flexDirection": "row",
          "height": 48,
          "justifyContent": "center",
          "paddingLeft": 24,
          "paddingRight": 24,
        },
      ]
    }
  >
    <Text
      color="#D7D7E0"
      disabled={true}
      inverted={false}
      pressed={false}
      small={false}
      style={
        Array [
          Object {
            "color": "#D7D7E0",
            "fontFamily": "Rubik",
            "fontSize": 16,
            "fontWeight": "500",
            "textAlign": "center",
          },
        ]
      }
    >
      Button
    </Text>
  </View>
</View>
`;

exports[`<Button /> Snapshots disabled buttons With disabled prop should match snapshot with default Button with Icon 1`] = `
<View
  accessibilityState={
    Object {
      "disabled": true,
    }
  }
  accessible={true}
  focusable={false}
  onClick={[Function]}
  onResponderGrant={[Function]}
  onResponderMove={[Function]}
  onResponderRelease={[Function]}
  onResponderTerminate={[Function]}
  onResponderTerminationRequest={[Function]}
  onStartShouldSetResponder={[Function]}
  style={
    Object {
      "flexDirection": "row",
    }
  }
>
  <View
    disabled={true}
    full={false}
    inverted={false}
    pressed={false}
    secondary={false}
    small={false}
    style={
      Array [
        Object {
          "alignItems": "center",
          "backgroundColor": "#F5F5FA",
          "borderRadius": 9999,
          "flexDirection": "row",
          "height": 48,
          "justifyContent": "center",
          "paddingLeft": 24,
          "paddingRight": 24,
        },
      ]
    }
  >
    <RNSVGSvgView
      bbHeight={24}
      bbWidth={24}
      fill="#D7D7E0"
      focusable={false}
      height={24}
      style={
        Array [
          Object {
            "backgroundColor": "transparent",
            "borderWidth": 0,
          },
          Object {
            "marginRight": 8,
          },
          Object {
            "opacity": 1,
          },
          Object {
            "flex": 0,
            "height": 24,
            "width": 24,
          },
        ]
      }
      width={24}
    >
      <RNSVGGroup
        fill={
          Array [
            0,
            4292335584,
          ]
        }
        fillOpacity={1}
        fillRule={1}
        font={Object {}}
        matrix={
          Array [
            1,
            0,
            0,
            1,
            0,
            0,
          ]
        }
        opacity={1}
        originX={0}
        originY={0}
        propList={
          Array [
            "fill",
          ]
        }
        rotation={0}
        scaleX={1}
        scaleY={1}
        skewX={0}
        skewY={0}
        stroke={null}
        strokeDasharray={null}
        strokeDashoffset={null}
        strokeLinecap={0}
        strokeLinejoin={0}
        strokeMiterlimit={4}
        strokeOpacity={1}
        strokeWidth={1}
        vectorEffect={0}
        x={0}
        y={0}
      />
    </RNSVGSvgView>
    <Text
      color="#D7D7E0"
      disabled={true}
      inverted={false}
      pressed={false}
      small={false}
      style={
        Array [
          Object {
            "color": "#D7D7E0",
            "fontFamily": "Rubik",
            "fontSize": 16,
            "fontWeight": "500",
            "textAlign": "center",
          },
        ]
      }
    >
      Button
    </Text>
  </View>
</View>
`;

exports[`<Button /> Snapshots disabled buttons With disabled prop should match snapshot with icon Button with Icon 1`] = `
<View
  accessibilityState={
    Object {
      "disabled": true,
    }
  }
  accessible={true}
  focusable={false}
  onClick={[Function]}
  onResponderGrant={[Function]}
  onResponderMove={[Function]}
  onResponderRelease={[Function]}
  onResponderTerminate={[Function]}
  onResponderTerminationRequest={[Function]}
  onStartShouldSetResponder={[Function]}
  style={
    Object {
      "flexDirection": "row",
    }
  }
>
  <View
    accessibilityRole="button"
    disabled={true}
    inverted={false}
    pressed={false}
    secondary={false}
    small={false}
    style={
      Array [
        Object {
          "alignItems": "center",
          "backgroundColor": "#F5F5FA",
          "borderRadius": 9999,
          "display": "flex",
          "height": 48,
          "justifyContent": "center",
          "width": 48,
        },
      ]
    }
  >
    <RNSVGSvgView
      bbHeight={24}
      bbWidth={24}
      fill="#D7D7E0"
      focusable={false}
      height={24}
      style={
        Array [
          Object {
            "backgroundColor": "transparent",
            "borderWidth": 0,
          },
          Array [
            Object {
              "height": 24,
              "width": 24,
            },
          ],
          Object {
            "opacity": 1,
          },
          Object {
            "flex": 0,
            "height": 24,
            "width": 24,
          },
        ]
      }
      width={24}
    >
      <RNSVGGroup
        fill={
          Array [
            0,
            4292335584,
          ]
        }
        fillOpacity={1}
        fillRule={1}
        font={Object {}}
        matrix={
          Array [
            1,
            0,
            0,
            1,
            0,
            0,
          ]
        }
        opacity={1}
        originX={0}
        originY={0}
        propList={
          Array [
            "fill",
          ]
        }
        rotation={0}
        scaleX={1}
        scaleY={1}
        skewX={0}
        skewY={0}
        stroke={null}
        strokeDasharray={null}
        strokeDashoffset={null}
        strokeLinecap={0}
        strokeLinejoin={0}
        strokeMiterlimit={4}
        strokeOpacity={1}
        strokeWidth={1}
        vectorEffect={0}
        x={0}
        y={0}
      />
    </RNSVGSvgView>
  </View>
</View>
`;

exports[`<Button /> Snapshots disabled buttons With disabled prop should match snapshot with link Button 1`] = `
<View
  accessibilityState={
    Object {
      "disabled": true,
    }
  }
  accessible={true}
  focusable={false}
  onClick={[Function]}
  onResponderGrant={[Function]}
  onResponderMove={[Function]}
  onResponderRelease={[Function]}
  onResponderTerminate={[Function]}
  onResponderTerminationRequest={[Function]}
  onStartShouldSetResponder={[Function]}
  style={
    Object {
      "flexDirection": "row",
    }
  }
>
  <Text
    disabled={true}
    pressed={false}
    secondary={false}
    style={
      Array [
        Object {
          "color": "#D7D7E0",
          "fontFamily": "Rubik",
          "fontSize": 16,
          "fontWeight": "500",
          "textAlign": "center",
        },
      ]
    }
  />
</View>
`;

exports[`<Button /> Snapshots disabled buttons With disabled prop should match snapshot with text Button 1`] = `
<View
  accessibilityState={
    Object {
      "disabled": true,
    }
  }
  accessible={true}
  focusable={false}
  onClick={[Function]}
  onResponderGrant={[Function]}
  onResponderMove={[Function]}
  onResponderRelease={[Function]}
  onResponderTerminate={[Function]}
  onResponderTerminationRequest={[Function]}
  onStartShouldSetResponder={[Function]}
  style={
    Object {
      "flexDirection": "row",
    }
  }
>
  <View
    disabled={true}
    pressed={false}
    style={
      Array [
        Object {
          "alignItems": "center",
          "backgroundColor": "transparent",
          "borderRadius": 9999,
          "flexDirection": "row",
          "height": 48,
          "justifyContent": "center",
          "paddingLeft": 24,
          "paddingRight": 24,
        },
      ]
    }
  >
    <Text
      color="#D7D7E0"
      disabled={true}
      pressed={false}
      style={
        Array [
          Object {
            "color": "#D7D7E0",
            "fontFamily": "Rubik",
            "fontSize": 16,
            "fontWeight": "500",
            "textAlign": "center",
          },
        ]
      }
    />
  </View>
</View>
`;

exports[`<Button /> Snapshots disabled buttons With disabled prop should match snapshot with text Button with Icon 1`] = `
<View
  accessibilityState={
    Object {
      "disabled": true,
    }
  }
  accessible={true}
  focusable={false}
  onClick={[Function]}
  onResponderGrant={[Function]}
  onResponderMove={[Function]}
  onResponderRelease={[Function]}
  onResponderTerminate={[Function]}
  onResponderTerminationRequest={[Function]}
  onStartShouldSetResponder={[Function]}
  style={
    Object {
      "flexDirection": "row",
    }
  }
>
  <View
    disabled={true}
    pressed={false}
    style={
      Array [
        Object {
          "alignItems": "center",
          "backgroundColor": "transparent",
          "borderRadius": 9999,
          "flexDirection": "row",
          "height": 48,
          "justifyContent": "center",
          "paddingLeft": 24,
          "paddingRight": 24,
        },
      ]
    }
  >
    <RNSVGSvgView
      bbHeight={24}
      bbWidth={24}
      fill="#D7D7E0"
      focusable={false}
      height={24}
      style={
        Array [
          Object {
            "backgroundColor": "transparent",
            "borderWidth": 0,
          },
          Object {
            "marginRight": 8,
          },
          Object {
            "opacity": 1,
          },
          Object {
            "flex": 0,
            "height": 24,
            "width": 24,
          },
        ]
      }
      width={24}
    >
      <RNSVGGroup
        fill={
          Array [
            0,
            4292335584,
          ]
        }
        fillOpacity={1}
        fillRule={1}
        font={Object {}}
        matrix={
          Array [
            1,
            0,
            0,
            1,
            0,
            0,
          ]
        }
        opacity={1}
        originX={0}
        originY={0}
        propList={
          Array [
            "fill",
          ]
        }
        rotation={0}
        scaleX={1}
        scaleY={1}
        skewX={0}
        skewY={0}
        stroke={null}
        strokeDasharray={null}
        strokeDashoffset={null}
        strokeLinecap={0}
        strokeLinejoin={0}
        strokeMiterlimit={4}
        strokeOpacity={1}
        strokeWidth={1}
        vectorEffect={0}
        x={0}
        y={0}
      />
    </RNSVGSvgView>
    <Text
      color="#D7D7E0"
      disabled={true}
      pressed={false}
      style={
        Array [
          Object {
            "color": "#D7D7E0",
            "fontFamily": "Rubik",
            "fontSize": 16,
            "fontWeight": "500",
            "textAlign": "center",
          },
        ]
      }
    />
  </View>
</View>
`;

exports[`<Button /> Snapshots primary buttons With full prop should match snapshot with default Button 1`] = `
<View
  accessible={true}
  focusable={false}
  onClick={[Function]}
  onResponderGrant={[Function]}
  onResponderMove={[Function]}
  onResponderRelease={[Function]}
  onResponderTerminate={[Function]}
  onResponderTerminationRequest={[Function]}
  onStartShouldSetResponder={[Function]}
  style={
    Object {
      "flexDirection": "row",
    }
  }
>
  <View
    disabled={false}
    full={true}
    inverted={false}
    pressed={false}
    secondary={false}
    small={false}
    style={
      Array [
        Object {
          "alignItems": "center",
          "backgroundColor": "#D8385E",
          "borderRadius": 9999,
          "flexDirection": "row",
          "height": 48,
          "justifyContent": "center",
          "paddingLeft": 24,
          "paddingRight": 24,
          "width": "100%",
        },
      ]
    }
  >
    <Text
      color="#FFFFFF"
      disabled={false}
      inverted={false}
      pressed={false}
      small={false}
      style={
        Array [
          Object {
            "color": "#FFFFFF",
            "fontFamily": "Rubik",
            "fontSize": 16,
            "fontWeight": "500",
            "textAlign": "center",
          },
        ]
      }
    >
      Button
    </Text>
  </View>
</View>
`;

exports[`<Button /> Snapshots primary buttons With full prop should match snapshot with default Button with Icon 1`] = `
<View
  accessible={true}
  focusable={false}
  onClick={[Function]}
  onResponderGrant={[Function]}
  onResponderMove={[Function]}
  onResponderRelease={[Function]}
  onResponderTerminate={[Function]}
  onResponderTerminationRequest={[Function]}
  onStartShouldSetResponder={[Function]}
  style={
    Object {
      "flexDirection": "row",
    }
  }
>
  <View
    disabled={false}
    full={true}
    inverted={false}
    pressed={false}
    secondary={false}
    small={false}
    style={
      Array [
        Object {
          "alignItems": "center",
          "backgroundColor": "#D8385E",
          "borderRadius": 9999,
          "flexDirection": "row",
          "height": 48,
          "justifyContent": "center",
          "paddingLeft": 24,
          "paddingRight": 24,
          "width": "100%",
        },
      ]
    }
  >
    <RNSVGSvgView
      bbHeight={24}
      bbWidth={24}
      fill="#FFFFFF"
      focusable={false}
      height={24}
      style={
        Array [
          Object {
            "backgroundColor": "transparent",
            "borderWidth": 0,
          },
          Object {
            "marginRight": 8,
          },
          Object {
            "opacity": 1,
          },
          Object {
            "flex": 0,
            "height": 24,
            "width": 24,
          },
        ]
      }
      width={24}
    >
      <RNSVGGroup
        fill={
          Array [
            0,
            4294967295,
          ]
        }
        fillOpacity={1}
        fillRule={1}
        font={Object {}}
        matrix={
          Array [
            1,
            0,
            0,
            1,
            0,
            0,
          ]
        }
        opacity={1}
        originX={0}
        originY={0}
        propList={
          Array [
            "fill",
          ]
        }
        rotation={0}
        scaleX={1}
        scaleY={1}
        skewX={0}
        skewY={0}
        stroke={null}
        strokeDasharray={null}
        strokeDashoffset={null}
        strokeLinecap={0}
        strokeLinejoin={0}
        strokeMiterlimit={4}
        strokeOpacity={1}
        strokeWidth={1}
        vectorEffect={0}
        x={0}
        y={0}
      />
    </RNSVGSvgView>
    <Text
      color="#FFFFFF"
      disabled={false}
      inverted={false}
      pressed={false}
      small={false}
      style={
        Array [
          Object {
            "color": "#FFFFFF",
            "fontFamily": "Rubik",
            "fontSize": 16,
            "fontWeight": "500",
            "textAlign": "center",
          },
        ]
      }
    >
      Button
    </Text>
  </View>
</View>
`;

exports[`<Button /> Snapshots primary buttons With full prop should match snapshot with text Button 1`] = `
<View
  accessible={true}
  focusable={false}
  onClick={[Function]}
  onResponderGrant={[Function]}
  onResponderMove={[Function]}
  onResponderRelease={[Function]}
  onResponderTerminate={[Function]}
  onResponderTerminationRequest={[Function]}
  onStartShouldSetResponder={[Function]}
  style={
    Object {
      "flexDirection": "row",
    }
  }
>
  <View
    full={true}
    pressed={false}
    style={
      Array [
        Object {
          "alignItems": "center",
          "backgroundColor": "transparent",
          "borderRadius": 9999,
          "flexDirection": "row",
          "height": 48,
          "justifyContent": "center",
          "paddingLeft": 24,
          "paddingRight": 24,
          "width": "100%",
        },
      ]
    }
  >
    <Text
      color="#D8385E"
      pressed={false}
      style={
        Array [
          Object {
            "color": "#D8385E",
            "fontFamily": "Rubik",
            "fontSize": 16,
            "fontWeight": "500",
            "textAlign": "center",
          },
        ]
      }
    />
  </View>
</View>
`;

exports[`<Button /> Snapshots primary buttons With full prop should match snapshot with text Button with Icon 1`] = `
<View
  accessible={true}
  focusable={false}
  onClick={[Function]}
  onResponderGrant={[Function]}
  onResponderMove={[Function]}
  onResponderRelease={[Function]}
  onResponderTerminate={[Function]}
  onResponderTerminationRequest={[Function]}
  onStartShouldSetResponder={[Function]}
  style={
    Object {
      "flexDirection": "row",
    }
  }
>
  <View
    full={true}
    pressed={false}
    style={
      Array [
        Object {
          "alignItems": "center",
          "backgroundColor": "transparent",
          "borderRadius": 9999,
          "flexDirection": "row",
          "height": 48,
          "justifyContent": "center",
          "paddingLeft": 24,
          "paddingRight": 24,
          "width": "100%",
        },
      ]
    }
  >
    <RNSVGSvgView
      bbHeight={24}
      bbWidth={24}
      fill="#D8385E"
      focusable={false}
      height={24}
      style={
        Array [
          Object {
            "backgroundColor": "transparent",
            "borderWidth": 0,
          },
          Object {
            "marginRight": 8,
          },
          Object {
            "opacity": 1,
          },
          Object {
            "flex": 0,
            "height": 24,
            "width": 24,
          },
        ]
      }
      width={24}
    >
      <RNSVGGroup
        fill={
          Array [
            0,
            4292360286,
          ]
        }
        fillOpacity={1}
        fillRule={1}
        font={Object {}}
        matrix={
          Array [
            1,
            0,
            0,
            1,
            0,
            0,
          ]
        }
        opacity={1}
        originX={0}
        originY={0}
        propList={
          Array [
            "fill",
          ]
        }
        rotation={0}
        scaleX={1}
        scaleY={1}
        skewX={0}
        skewY={0}
        stroke={null}
        strokeDasharray={null}
        strokeDashoffset={null}
        strokeLinecap={0}
        strokeLinejoin={0}
        strokeMiterlimit={4}
        strokeOpacity={1}
        strokeWidth={1}
        vectorEffect={0}
        x={0}
        y={0}
      />
    </RNSVGSvgView>
    <Text
      color="#D8385E"
      pressed={false}
      style={
        Array [
          Object {
            "color": "#D8385E",
            "fontFamily": "Rubik",
            "fontSize": 16,
            "fontWeight": "500",
            "textAlign": "center",
          },
        ]
      }
    />
  </View>
</View>
`;

exports[`<Button /> Snapshots primary buttons With inverted prop should match snapshot with default Button 1`] = `
<View
  accessible={true}
  focusable={false}
  onClick={[Function]}
  onResponderGrant={[Function]}
  onResponderMove={[Function]}
  onResponderRelease={[Function]}
  onResponderTerminate={[Function]}
  onResponderTerminationRequest={[Function]}
  onStartShouldSetResponder={[Function]}
  style={
    Object {
      "flexDirection": "row",
    }
  }
>
  <View
    disabled={false}
    full={false}
    inverted={true}
    pressed={false}
    secondary={false}
    small={false}
    style={
      Array [
        Object {
          "alignItems": "center",
          "backgroundColor": "#FFFFFF",
          "borderRadius": 9999,
          "flexDirection": "row",
          "height": 48,
          "justifyContent": "center",
          "paddingLeft": 24,
          "paddingRight": 24,
        },
      ]
    }
  >
    <Text
      color="#D8385E"
      disabled={false}
      inverted={true}
      pressed={false}
      small={false}
      style={
        Array [
          Object {
            "color": "#D8385E",
            "fontFamily": "Rubik",
            "fontSize": 16,
            "fontWeight": "500",
            "textAlign": "center",
          },
        ]
      }
    >
      Button
    </Text>
  </View>
</View>
`;

exports[`<Button /> Snapshots primary buttons With inverted prop should match snapshot with default Button with Icon 1`] = `
<View
  accessible={true}
  focusable={false}
  onClick={[Function]}
  onResponderGrant={[Function]}
  onResponderMove={[Function]}
  onResponderRelease={[Function]}
  onResponderTerminate={[Function]}
  onResponderTerminationRequest={[Function]}
  onStartShouldSetResponder={[Function]}
  style={
    Object {
      "flexDirection": "row",
    }
  }
>
  <View
    disabled={false}
    full={false}
    inverted={true}
    pressed={false}
    secondary={false}
    small={false}
    style={
      Array [
        Object {
          "alignItems": "center",
          "backgroundColor": "#FFFFFF",
          "borderRadius": 9999,
          "flexDirection": "row",
          "height": 48,
          "justifyContent": "center",
          "paddingLeft": 24,
          "paddingRight": 24,
        },
      ]
    }
  >
    <RNSVGSvgView
      bbHeight={24}
      bbWidth={24}
      fill="#D8385E"
      focusable={false}
      height={24}
      style={
        Array [
          Object {
            "backgroundColor": "transparent",
            "borderWidth": 0,
          },
          Object {
            "marginRight": 8,
          },
          Object {
            "opacity": 1,
          },
          Object {
            "flex": 0,
            "height": 24,
            "width": 24,
          },
        ]
      }
      width={24}
    >
      <RNSVGGroup
        fill={
          Array [
            0,
            4292360286,
          ]
        }
        fillOpacity={1}
        fillRule={1}
        font={Object {}}
        matrix={
          Array [
            1,
            0,
            0,
            1,
            0,
            0,
          ]
        }
        opacity={1}
        originX={0}
        originY={0}
        propList={
          Array [
            "fill",
          ]
        }
        rotation={0}
        scaleX={1}
        scaleY={1}
        skewX={0}
        skewY={0}
        stroke={null}
        strokeDasharray={null}
        strokeDashoffset={null}
        strokeLinecap={0}
        strokeLinejoin={0}
        strokeMiterlimit={4}
        strokeOpacity={1}
        strokeWidth={1}
        vectorEffect={0}
        x={0}
        y={0}
      />
    </RNSVGSvgView>
    <Text
      color="#D8385E"
      disabled={false}
      inverted={true}
      pressed={false}
      small={false}
      style={
        Array [
          Object {
            "color": "#D8385E",
            "fontFamily": "Rubik",
            "fontSize": 16,
            "fontWeight": "500",
            "textAlign": "center",
          },
        ]
      }
    >
      Button
    </Text>
  </View>
</View>
`;

exports[`<Button /> Snapshots primary buttons With inverted prop should match snapshot with icon Button 1`] = `
<View
  accessible={true}
  focusable={false}
  onClick={[Function]}
  onResponderGrant={[Function]}
  onResponderMove={[Function]}
  onResponderRelease={[Function]}
  onResponderTerminate={[Function]}
  onResponderTerminationRequest={[Function]}
  onStartShouldSetResponder={[Function]}
  style={
    Object {
      "flexDirection": "row",
    }
  }
>
  <View
    accessibilityRole="button"
    disabled={false}
    inverted={true}
    pressed={false}
    secondary={false}
    small={false}
    style={
      Array [
        Object {
          "alignItems": "center",
          "backgroundColor": "#FFFFFF",
          "borderRadius": 9999,
          "display": "flex",
          "height": 48,
          "justifyContent": "center",
          "width": 48,
        },
      ]
    }
  >
    <RNSVGSvgView
      bbHeight={24}
      bbWidth={24}
      fill="#D8385E"
      focusable={false}
      height={24}
      style={
        Array [
          Object {
            "backgroundColor": "transparent",
            "borderWidth": 0,
          },
          Array [
            Object {
              "height": 24,
              "width": 24,
            },
          ],
          Object {
            "opacity": 1,
          },
          Object {
            "flex": 0,
            "height": 24,
            "width": 24,
          },
        ]
      }
      width={24}
    >
      <RNSVGGroup
        fill={
          Array [
            0,
            4292360286,
          ]
        }
        fillOpacity={1}
        fillRule={1}
        font={Object {}}
        matrix={
          Array [
            1,
            0,
            0,
            1,
            0,
            0,
          ]
        }
        opacity={1}
        originX={0}
        originY={0}
        propList={
          Array [
            "fill",
          ]
        }
        rotation={0}
        scaleX={1}
        scaleY={1}
        skewX={0}
        skewY={0}
        stroke={null}
        strokeDasharray={null}
        strokeDashoffset={null}
        strokeLinecap={0}
        strokeLinejoin={0}
        strokeMiterlimit={4}
        strokeOpacity={1}
        strokeWidth={1}
        vectorEffect={0}
        x={0}
        y={0}
      />
    </RNSVGSvgView>
  </View>
</View>
`;

exports[`<Button /> Snapshots primary buttons With inverted prop should match snapshot with text Button 1`] = `
<View
  accessible={true}
  focusable={false}
  onClick={[Function]}
  onResponderGrant={[Function]}
  onResponderMove={[Function]}
  onResponderRelease={[Function]}
  onResponderTerminate={[Function]}
  onResponderTerminationRequest={[Function]}
  onStartShouldSetResponder={[Function]}
  style={
    Object {
      "flexDirection": "row",
    }
  }
>
  <View
    pressed={false}
    style={
      Array [
        Object {
          "alignItems": "center",
          "backgroundColor": "transparent",
          "borderRadius": 9999,
          "flexDirection": "row",
          "height": 48,
          "justifyContent": "center",
          "paddingLeft": 24,
          "paddingRight": 24,
        },
      ]
    }
  >
    <Text
      color="#FFFFFF"
      pressed={false}
      style={
        Array [
          Object {
            "color": "#FFFFFF",
            "fontFamily": "Rubik",
            "fontSize": 16,
            "fontWeight": "500",
            "textAlign": "center",
          },
        ]
      }
    />
  </View>
</View>
`;

exports[`<Button /> Snapshots primary buttons With inverted prop should match snapshot with text Button with Icon 1`] = `
<View
  accessible={true}
  focusable={false}
  onClick={[Function]}
  onResponderGrant={[Function]}
  onResponderMove={[Function]}
  onResponderRelease={[Function]}
  onResponderTerminate={[Function]}
  onResponderTerminationRequest={[Function]}
  onStartShouldSetResponder={[Function]}
  style={
    Object {
      "flexDirection": "row",
    }
  }
>
  <View
    pressed={false}
    style={
      Array [
        Object {
          "alignItems": "center",
          "backgroundColor": "transparent",
          "borderRadius": 9999,
          "flexDirection": "row",
          "height": 48,
          "justifyContent": "center",
          "paddingLeft": 24,
          "paddingRight": 24,
        },
      ]
    }
  >
    <RNSVGSvgView
      bbHeight={24}
      bbWidth={24}
      fill="#FFFFFF"
      focusable={false}
      height={24}
      style={
        Array [
          Object {
            "backgroundColor": "transparent",
            "borderWidth": 0,
          },
          Object {
            "marginRight": 8,
          },
          Object {
            "opacity": 1,
          },
          Object {
            "flex": 0,
            "height": 24,
            "width": 24,
          },
        ]
      }
      width={24}
    >
      <RNSVGGroup
        fill={
          Array [
            0,
            4294967295,
          ]
        }
        fillOpacity={1}
        fillRule={1}
        font={Object {}}
        matrix={
          Array [
            1,
            0,
            0,
            1,
            0,
            0,
          ]
        }
        opacity={1}
        originX={0}
        originY={0}
        propList={
          Array [
            "fill",
          ]
        }
        rotation={0}
        scaleX={1}
        scaleY={1}
        skewX={0}
        skewY={0}
        stroke={null}
        strokeDasharray={null}
        strokeDashoffset={null}
        strokeLinecap={0}
        strokeLinejoin={0}
        strokeMiterlimit={4}
        strokeOpacity={1}
        strokeWidth={1}
        vectorEffect={0}
        x={0}
        y={0}
      />
    </RNSVGSvgView>
    <Text
      color="#FFFFFF"
      pressed={false}
      style={
        Array [
          Object {
            "color": "#FFFFFF",
            "fontFamily": "Rubik",
            "fontSize": 16,
            "fontWeight": "500",
            "textAlign": "center",
          },
        ]
      }
    />
  </View>
</View>
`;

exports[`<Button /> Snapshots primary buttons With large prop should match snapshot icon Button with large prop 1`] = `
<View
  accessible={true}
  focusable={false}
  onClick={[Function]}
  onResponderGrant={[Function]}
  onResponderMove={[Function]}
  onResponderRelease={[Function]}
  onResponderTerminate={[Function]}
  onResponderTerminationRequest={[Function]}
  onStartShouldSetResponder={[Function]}
  style={
    Object {
      "flexDirection": "row",
    }
  }
>
  <View
    accessibilityRole="button"
    disabled={false}
    inverted={false}
    large={true}
    pressed={false}
    secondary={false}
    small={false}
    style={
      Array [
        Object {
          "alignItems": "center",
          "backgroundColor": "#D8385E",
          "borderRadius": 9999,
          "display": "flex",
          "height": 48,
          "justifyContent": "center",
          "width": 48,
        },
      ]
    }
  >
    <RNSVGSvgView
      bbHeight={24}
      bbWidth={24}
      fill="#FFFFFF"
      focusable={false}
      height={24}
      style={
        Array [
          Object {
            "backgroundColor": "transparent",
            "borderWidth": 0,
          },
          Array [
            Object {
              "height": 24,
              "width": 24,
            },
          ],
          Object {
            "opacity": 1,
          },
          Object {
            "flex": 0,
            "height": 24,
            "width": 24,
          },
        ]
      }
      width={24}
    >
      <RNSVGGroup
        fill={
          Array [
            0,
            4294967295,
          ]
        }
        fillOpacity={1}
        fillRule={1}
        font={Object {}}
        matrix={
          Array [
            1,
            0,
            0,
            1,
            0,
            0,
          ]
        }
        opacity={1}
        originX={0}
        originY={0}
        propList={
          Array [
            "fill",
          ]
        }
        rotation={0}
        scaleX={1}
        scaleY={1}
        skewX={0}
        skewY={0}
        stroke={null}
        strokeDasharray={null}
        strokeDashoffset={null}
        strokeLinecap={0}
        strokeLinejoin={0}
        strokeMiterlimit={4}
        strokeOpacity={1}
        strokeWidth={1}
        vectorEffect={0}
        x={0}
        y={0}
      />
    </RNSVGSvgView>
  </View>
</View>
`;

exports[`<Button /> Snapshots primary buttons With small prop should match snapshot with default Button 1`] = `
<View
  accessible={true}
  focusable={false}
  onClick={[Function]}
  onResponderGrant={[Function]}
  onResponderMove={[Function]}
  onResponderRelease={[Function]}
  onResponderTerminate={[Function]}
  onResponderTerminationRequest={[Function]}
  onStartShouldSetResponder={[Function]}
  style={
    Object {
      "flexDirection": "row",
    }
  }
>
  <View
    disabled={false}
    full={false}
    inverted={false}
    pressed={false}
    secondary={false}
    small={true}
    style={
      Array [
        Object {
          "alignItems": "center",
          "backgroundColor": "#D8385E",
          "borderRadius": 9999,
          "flexDirection": "row",
          "height": 32,
          "justifyContent": "center",
          "paddingLeft": 16,
          "paddingRight": 16,
        },
      ]
    }
  >
    <Text
      color="#FFFFFF"
      disabled={false}
      inverted={false}
      pressed={false}
      small={true}
      style={
        Array [
          Object {
            "color": "#FFFFFF",
            "fontFamily": "Rubik",
            "fontSize": 14,
            "fontWeight": "500",
            "textAlign": "center",
          },
        ]
      }
    >
      Button
    </Text>
  </View>
</View>
`;

exports[`<Button /> Snapshots primary buttons With small prop should match snapshot with default Button with Icon 1`] = `
<View
  accessible={true}
  focusable={false}
  onClick={[Function]}
  onResponderGrant={[Function]}
  onResponderMove={[Function]}
  onResponderRelease={[Function]}
  onResponderTerminate={[Function]}
  onResponderTerminationRequest={[Function]}
  onStartShouldSetResponder={[Function]}
  style={
    Object {
      "flexDirection": "row",
    }
  }
>
  <View
    disabled={false}
    full={false}
    inverted={false}
    pressed={false}
    secondary={false}
    small={true}
    style={
      Array [
        Object {
          "alignItems": "center",
          "backgroundColor": "#D8385E",
          "borderRadius": 9999,
          "flexDirection": "row",
          "height": 32,
          "justifyContent": "center",
          "paddingLeft": 16,
          "paddingRight": 16,
        },
      ]
    }
  >
    <RNSVGSvgView
      bbHeight={16}
      bbWidth={16}
      fill="#FFFFFF"
      focusable={false}
      height={16}
      style={
        Array [
          Object {
            "backgroundColor": "transparent",
            "borderWidth": 0,
          },
          Object {
            "marginRight": 8,
          },
          Object {
            "opacity": 1,
          },
          Object {
            "flex": 0,
            "height": 16,
            "width": 16,
          },
        ]
      }
      width={16}
    >
      <RNSVGGroup
        fill={
          Array [
            0,
            4294967295,
          ]
        }
        fillOpacity={1}
        fillRule={1}
        font={Object {}}
        matrix={
          Array [
            1,
            0,
            0,
            1,
            0,
            0,
          ]
        }
        opacity={1}
        originX={0}
        originY={0}
        propList={
          Array [
            "fill",
          ]
        }
        rotation={0}
        scaleX={1}
        scaleY={1}
        skewX={0}
        skewY={0}
        stroke={null}
        strokeDasharray={null}
        strokeDashoffset={null}
        strokeLinecap={0}
        strokeLinejoin={0}
        strokeMiterlimit={4}
        strokeOpacity={1}
        strokeWidth={1}
        vectorEffect={0}
        x={0}
        y={0}
      />
    </RNSVGSvgView>
    <Text
      color="#FFFFFF"
      disabled={false}
      inverted={false}
      pressed={false}
      small={true}
      style={
        Array [
          Object {
            "color": "#FFFFFF",
            "fontFamily": "Rubik",
            "fontSize": 14,
            "fontWeight": "500",
            "textAlign": "center",
          },
        ]
      }
    >
      Button
    </Text>
  </View>
</View>
`;

exports[`<Button /> Snapshots primary buttons With small prop should match snapshot with text Button 1`] = `
<View
  accessible={true}
  focusable={false}
  onClick={[Function]}
  onResponderGrant={[Function]}
  onResponderMove={[Function]}
  onResponderRelease={[Function]}
  onResponderTerminate={[Function]}
  onResponderTerminationRequest={[Function]}
  onStartShouldSetResponder={[Function]}
  style={
    Object {
      "flexDirection": "row",
    }
  }
>
  <View
    pressed={false}
    small={true}
    style={
      Array [
        Object {
          "alignItems": "center",
          "backgroundColor": "transparent",
          "borderRadius": 9999,
          "flexDirection": "row",
          "height": 32,
          "justifyContent": "center",
          "paddingLeft": 16,
          "paddingRight": 16,
        },
      ]
    }
  >
    <Text
      color="#D8385E"
      pressed={false}
      small={true}
      style={
        Array [
          Object {
            "color": "#D8385E",
            "fontFamily": "Rubik",
            "fontSize": 14,
            "fontWeight": "500",
            "textAlign": "center",
          },
        ]
      }
    />
  </View>
</View>
`;

exports[`<Button /> Snapshots primary buttons With small prop should match snapshot with text Button with Icon 1`] = `
<View
  accessible={true}
  focusable={false}
  onClick={[Function]}
  onResponderGrant={[Function]}
  onResponderMove={[Function]}
  onResponderRelease={[Function]}
  onResponderTerminate={[Function]}
  onResponderTerminationRequest={[Function]}
  onStartShouldSetResponder={[Function]}
  style={
    Object {
      "flexDirection": "row",
    }
  }
>
  <View
    pressed={false}
    small={true}
    style={
      Array [
        Object {
          "alignItems": "center",
          "backgroundColor": "transparent",
          "borderRadius": 9999,
          "flexDirection": "row",
          "height": 32,
          "justifyContent": "center",
          "paddingLeft": 16,
          "paddingRight": 16,
        },
      ]
    }
  >
    <RNSVGSvgView
      bbHeight={16}
      bbWidth={16}
      fill="#D8385E"
      focusable={false}
      height={16}
      style={
        Array [
          Object {
            "backgroundColor": "transparent",
            "borderWidth": 0,
          },
          Object {
            "marginRight": 8,
          },
          Object {
            "opacity": 1,
          },
          Object {
            "flex": 0,
            "height": 16,
            "width": 16,
          },
        ]
      }
      width={16}
    >
      <RNSVGGroup
        fill={
          Array [
            0,
            4292360286,
          ]
        }
        fillOpacity={1}
        fillRule={1}
        font={Object {}}
        matrix={
          Array [
            1,
            0,
            0,
            1,
            0,
            0,
          ]
        }
        opacity={1}
        originX={0}
        originY={0}
        propList={
          Array [
            "fill",
          ]
        }
        rotation={0}
        scaleX={1}
        scaleY={1}
        skewX={0}
        skewY={0}
        stroke={null}
        strokeDasharray={null}
        strokeDashoffset={null}
        strokeLinecap={0}
        strokeLinejoin={0}
        strokeMiterlimit={4}
        strokeOpacity={1}
        strokeWidth={1}
        vectorEffect={0}
        x={0}
        y={0}
      />
    </RNSVGSvgView>
    <Text
      color="#D8385E"
      pressed={false}
      small={true}
      style={
        Array [
          Object {
            "color": "#D8385E",
            "fontFamily": "Rubik",
            "fontSize": 14,
            "fontWeight": "500",
            "textAlign": "center",
          },
        ]
      }
    />
  </View>
</View>
`;

exports[`<Button /> Snapshots primary buttons Without props should match snapshot with default Button 1`] = `
<View
  accessible={true}
  focusable={false}
  onClick={[Function]}
  onResponderGrant={[Function]}
  onResponderMove={[Function]}
  onResponderRelease={[Function]}
  onResponderTerminate={[Function]}
  onResponderTerminationRequest={[Function]}
  onStartShouldSetResponder={[Function]}
  style={
    Object {
      "flexDirection": "row",
    }
  }
>
  <View
    disabled={false}
    full={false}
    inverted={false}
    pressed={false}
    secondary={false}
    small={false}
    style={
      Array [
        Object {
          "alignItems": "center",
          "backgroundColor": "#D8385E",
          "borderRadius": 9999,
          "flexDirection": "row",
          "height": 48,
          "justifyContent": "center",
          "paddingLeft": 24,
          "paddingRight": 24,
        },
      ]
    }
  >
    <Text
      color="#FFFFFF"
      disabled={false}
      inverted={false}
      pressed={false}
      small={false}
      style={
        Array [
          Object {
            "color": "#FFFFFF",
            "fontFamily": "Rubik",
            "fontSize": 16,
            "fontWeight": "500",
            "textAlign": "center",
          },
        ]
      }
    >
      Button
    </Text>
  </View>
</View>
`;

exports[`<Button /> Snapshots primary buttons Without props should match snapshot with default Button with Icon 1`] = `
<View
  accessible={true}
  focusable={false}
  onClick={[Function]}
  onResponderGrant={[Function]}
  onResponderMove={[Function]}
  onResponderRelease={[Function]}
  onResponderTerminate={[Function]}
  onResponderTerminationRequest={[Function]}
  onStartShouldSetResponder={[Function]}
  style={
    Object {
      "flexDirection": "row",
    }
  }
>
  <View
    disabled={false}
    full={false}
    inverted={false}
    pressed={false}
    secondary={false}
    small={false}
    style={
      Array [
        Object {
          "alignItems": "center",
          "backgroundColor": "#D8385E",
          "borderRadius": 9999,
          "flexDirection": "row",
          "height": 48,
          "justifyContent": "center",
          "paddingLeft": 24,
          "paddingRight": 24,
        },
      ]
    }
  >
    <RNSVGSvgView
      bbHeight={24}
      bbWidth={24}
      fill="#FFFFFF"
      focusable={false}
      height={24}
      style={
        Array [
          Object {
            "backgroundColor": "transparent",
            "borderWidth": 0,
          },
          Object {
            "marginRight": 8,
          },
          Object {
            "opacity": 1,
          },
          Object {
            "flex": 0,
            "height": 24,
            "width": 24,
          },
        ]
      }
      width={24}
    >
      <RNSVGGroup
        fill={
          Array [
            0,
            4294967295,
          ]
        }
        fillOpacity={1}
        fillRule={1}
        font={Object {}}
        matrix={
          Array [
            1,
            0,
            0,
            1,
            0,
            0,
          ]
        }
        opacity={1}
        originX={0}
        originY={0}
        propList={
          Array [
            "fill",
          ]
        }
        rotation={0}
        scaleX={1}
        scaleY={1}
        skewX={0}
        skewY={0}
        stroke={null}
        strokeDasharray={null}
        strokeDashoffset={null}
        strokeLinecap={0}
        strokeLinejoin={0}
        strokeMiterlimit={4}
        strokeOpacity={1}
        strokeWidth={1}
        vectorEffect={0}
        x={0}
        y={0}
      />
    </RNSVGSvgView>
    <Text
      color="#FFFFFF"
      disabled={false}
      inverted={false}
      pressed={false}
      small={false}
      style={
        Array [
          Object {
            "color": "#FFFFFF",
            "fontFamily": "Rubik",
            "fontSize": 16,
            "fontWeight": "500",
            "textAlign": "center",
          },
        ]
      }
    >
      Button
    </Text>
  </View>
</View>
`;

exports[`<Button /> Snapshots primary buttons Without props should match snapshot with link Button 1`] = `
<View
  accessible={true}
  focusable={false}
  onClick={[Function]}
  onResponderGrant={[Function]}
  onResponderMove={[Function]}
  onResponderRelease={[Function]}
  onResponderTerminate={[Function]}
  onResponderTerminationRequest={[Function]}
  onStartShouldSetResponder={[Function]}
  style={
    Object {
      "flexDirection": "row",
    }
  }
>
  <Text
    disabled={false}
    pressed={false}
    secondary={false}
    style={
      Array [
        Object {
          "color": "#D8385E",
          "fontFamily": "Rubik",
          "fontSize": 16,
          "fontWeight": "500",
          "textAlign": "center",
        },
      ]
    }
  />
</View>
`;

exports[`<Button /> Snapshots primary buttons Without props should match snapshot with text Button 1`] = `
<View
  accessible={true}
  focusable={false}
  onClick={[Function]}
  onResponderGrant={[Function]}
  onResponderMove={[Function]}
  onResponderRelease={[Function]}
  onResponderTerminate={[Function]}
  onResponderTerminationRequest={[Function]}
  onStartShouldSetResponder={[Function]}
  style={
    Object {
      "flexDirection": "row",
    }
  }
>
  <View
    pressed={false}
    style={
      Array [
        Object {
          "alignItems": "center",
          "backgroundColor": "transparent",
          "borderRadius": 9999,
          "flexDirection": "row",
          "height": 48,
          "justifyContent": "center",
          "paddingLeft": 24,
          "paddingRight": 24,
        },
      ]
    }
  >
    <Text
      color="#D8385E"
      pressed={false}
      style={
        Array [
          Object {
            "color": "#D8385E",
            "fontFamily": "Rubik",
            "fontSize": 16,
            "fontWeight": "500",
            "textAlign": "center",
          },
        ]
      }
    />
  </View>
</View>
`;

exports[`<Button /> Snapshots primary buttons Without props should match snapshot with text Button with Icon 1`] = `
<View
  accessible={true}
  focusable={false}
  onClick={[Function]}
  onResponderGrant={[Function]}
  onResponderMove={[Function]}
  onResponderRelease={[Function]}
  onResponderTerminate={[Function]}
  onResponderTerminationRequest={[Function]}
  onStartShouldSetResponder={[Function]}
  style={
    Object {
      "flexDirection": "row",
    }
  }
>
  <View
    pressed={false}
    style={
      Array [
        Object {
          "alignItems": "center",
          "backgroundColor": "transparent",
          "borderRadius": 9999,
          "flexDirection": "row",
          "height": 48,
          "justifyContent": "center",
          "paddingLeft": 24,
          "paddingRight": 24,
        },
      ]
    }
  >
    <RNSVGSvgView
      bbHeight={24}
      bbWidth={24}
      fill="#D8385E"
      focusable={false}
      height={24}
      style={
        Array [
          Object {
            "backgroundColor": "transparent",
            "borderWidth": 0,
          },
          Object {
            "marginRight": 8,
          },
          Object {
            "opacity": 1,
          },
          Object {
            "flex": 0,
            "height": 24,
            "width": 24,
          },
        ]
      }
      width={24}
    >
      <RNSVGGroup
        fill={
          Array [
            0,
            4292360286,
          ]
        }
        fillOpacity={1}
        fillRule={1}
        font={Object {}}
        matrix={
          Array [
            1,
            0,
            0,
            1,
            0,
            0,
          ]
        }
        opacity={1}
        originX={0}
        originY={0}
        propList={
          Array [
            "fill",
          ]
        }
        rotation={0}
        scaleX={1}
        scaleY={1}
        skewX={0}
        skewY={0}
        stroke={null}
        strokeDasharray={null}
        strokeDashoffset={null}
        strokeLinecap={0}
        strokeLinejoin={0}
        strokeMiterlimit={4}
        strokeOpacity={1}
        strokeWidth={1}
        vectorEffect={0}
        x={0}
        y={0}
      />
    </RNSVGSvgView>
    <Text
      color="#D8385E"
      pressed={false}
      style={
        Array [
          Object {
            "color": "#D8385E",
            "fontFamily": "Rubik",
            "fontSize": 16,
            "fontWeight": "500",
            "textAlign": "center",
          },
        ]
      }
    />
  </View>
</View>
`;

exports[`<Button /> Snapshots secondary buttons With full prop should match snapshot with default Button 1`] = `
<View
  accessible={true}
  focusable={false}
  onClick={[Function]}
  onResponderGrant={[Function]}
  onResponderMove={[Function]}
  onResponderRelease={[Function]}
  onResponderTerminate={[Function]}
  onResponderTerminationRequest={[Function]}
  onStartShouldSetResponder={[Function]}
  style={
    Object {
      "flexDirection": "row",
    }
  }
>
  <View
    disabled={false}
    full={true}
    inverted={false}
    pressed={false}
    secondary={true}
    small={false}
    style={
      Array [
        Object {
          "alignItems": "center",
          "backgroundColor": "#231B22",
          "borderRadius": 9999,
          "flexDirection": "row",
          "height": 48,
          "justifyContent": "center",
          "paddingLeft": 24,
          "paddingRight": 24,
          "width": "100%",
        },
      ]
    }
  >
    <Text
      color="#FFFFFF"
      disabled={false}
      inverted={false}
      pressed={false}
      small={false}
      style={
        Array [
          Object {
            "color": "#FFFFFF",
            "fontFamily": "Rubik",
            "fontSize": 16,
            "fontWeight": "500",
            "textAlign": "center",
          },
        ]
      }
    >
      Button
    </Text>
  </View>
</View>
`;

exports[`<Button /> Snapshots secondary buttons With full prop should match snapshot with default Button with Icon 1`] = `
<View
  accessible={true}
  focusable={false}
  onClick={[Function]}
  onResponderGrant={[Function]}
  onResponderMove={[Function]}
  onResponderRelease={[Function]}
  onResponderTerminate={[Function]}
  onResponderTerminationRequest={[Function]}
  onStartShouldSetResponder={[Function]}
  style={
    Object {
      "flexDirection": "row",
    }
  }
>
  <View
    disabled={false}
    full={true}
    inverted={false}
    pressed={false}
    secondary={true}
    small={false}
    style={
      Array [
        Object {
          "alignItems": "center",
          "backgroundColor": "#231B22",
          "borderRadius": 9999,
          "flexDirection": "row",
          "height": 48,
          "justifyContent": "center",
          "paddingLeft": 24,
          "paddingRight": 24,
          "width": "100%",
        },
      ]
    }
  >
    <RNSVGSvgView
      bbHeight={24}
      bbWidth={24}
      fill="#FFFFFF"
      focusable={false}
      height={24}
      style={
        Array [
          Object {
            "backgroundColor": "transparent",
            "borderWidth": 0,
          },
          Object {
            "marginRight": 8,
          },
          Object {
            "opacity": 1,
          },
          Object {
            "flex": 0,
            "height": 24,
            "width": 24,
          },
        ]
      }
      width={24}
    >
      <RNSVGGroup
        fill={
          Array [
            0,
            4294967295,
          ]
        }
        fillOpacity={1}
        fillRule={1}
        font={Object {}}
        matrix={
          Array [
            1,
            0,
            0,
            1,
            0,
            0,
          ]
        }
        opacity={1}
        originX={0}
        originY={0}
        propList={
          Array [
            "fill",
          ]
        }
        rotation={0}
        scaleX={1}
        scaleY={1}
        skewX={0}
        skewY={0}
        stroke={null}
        strokeDasharray={null}
        strokeDashoffset={null}
        strokeLinecap={0}
        strokeLinejoin={0}
        strokeMiterlimit={4}
        strokeOpacity={1}
        strokeWidth={1}
        vectorEffect={0}
        x={0}
        y={0}
      />
    </RNSVGSvgView>
    <Text
      color="#FFFFFF"
      disabled={false}
      inverted={false}
      pressed={false}
      small={false}
      style={
        Array [
          Object {
            "color": "#FFFFFF",
            "fontFamily": "Rubik",
            "fontSize": 16,
            "fontWeight": "500",
            "textAlign": "center",
          },
        ]
      }
    >
      Button
    </Text>
  </View>
</View>
`;

exports[`<Button /> Snapshots secondary buttons With full prop should match snapshot with text Button 1`] = `
<View
  accessible={true}
  focusable={false}
  onClick={[Function]}
  onResponderGrant={[Function]}
  onResponderMove={[Function]}
  onResponderRelease={[Function]}
  onResponderTerminate={[Function]}
  onResponderTerminationRequest={[Function]}
  onStartShouldSetResponder={[Function]}
  style={
    Object {
      "flexDirection": "row",
    }
  }
>
  <View
    full={true}
    pressed={false}
    style={
      Array [
        Object {
          "alignItems": "center",
          "backgroundColor": "transparent",
          "borderRadius": 9999,
          "flexDirection": "row",
          "height": 48,
          "justifyContent": "center",
          "paddingLeft": 24,
          "paddingRight": 24,
          "width": "100%",
        },
      ]
    }
  >
    <Text
      color="#231B22"
      pressed={false}
      secondary={true}
      style={
        Array [
          Object {
            "color": "#231B22",
            "fontFamily": "Rubik",
            "fontSize": 16,
            "fontWeight": "500",
            "textAlign": "center",
          },
        ]
      }
    />
  </View>
</View>
`;

exports[`<Button /> Snapshots secondary buttons With full prop should match snapshot with text Button with Icon 1`] = `
<View
  accessible={true}
  focusable={false}
  onClick={[Function]}
  onResponderGrant={[Function]}
  onResponderMove={[Function]}
  onResponderRelease={[Function]}
  onResponderTerminate={[Function]}
  onResponderTerminationRequest={[Function]}
  onStartShouldSetResponder={[Function]}
  style={
    Object {
      "flexDirection": "row",
    }
  }
>
  <View
    full={true}
    pressed={false}
    style={
      Array [
        Object {
          "alignItems": "center",
          "backgroundColor": "transparent",
          "borderRadius": 9999,
          "flexDirection": "row",
          "height": 48,
          "justifyContent": "center",
          "paddingLeft": 24,
          "paddingRight": 24,
          "width": "100%",
        },
      ]
    }
  >
    <RNSVGSvgView
      bbHeight={24}
      bbWidth={24}
      fill="#231B22"
      focusable={false}
      height={24}
      style={
        Array [
          Object {
            "backgroundColor": "transparent",
            "borderWidth": 0,
          },
          Object {
            "marginRight": 8,
          },
          Object {
            "opacity": 1,
          },
          Object {
            "flex": 0,
            "height": 24,
            "width": 24,
          },
        ]
      }
      width={24}
    >
      <RNSVGGroup
        fill={
          Array [
            0,
            4280490786,
          ]
        }
        fillOpacity={1}
        fillRule={1}
        font={Object {}}
        matrix={
          Array [
            1,
            0,
            0,
            1,
            0,
            0,
          ]
        }
        opacity={1}
        originX={0}
        originY={0}
        propList={
          Array [
            "fill",
          ]
        }
        rotation={0}
        scaleX={1}
        scaleY={1}
        skewX={0}
        skewY={0}
        stroke={null}
        strokeDasharray={null}
        strokeDashoffset={null}
        strokeLinecap={0}
        strokeLinejoin={0}
        strokeMiterlimit={4}
        strokeOpacity={1}
        strokeWidth={1}
        vectorEffect={0}
        x={0}
        y={0}
      />
    </RNSVGSvgView>
    <Text
      color="#231B22"
      pressed={false}
      secondary={true}
      style={
        Array [
          Object {
            "color": "#231B22",
            "fontFamily": "Rubik",
            "fontSize": 16,
            "fontWeight": "500",
            "textAlign": "center",
          },
        ]
      }
    />
  </View>
</View>
`;

exports[`<Button /> Snapshots secondary buttons With inverted prop should match snapshot with default Button 1`] = `
<View
  accessible={true}
  focusable={false}
  onClick={[Function]}
  onResponderGrant={[Function]}
  onResponderMove={[Function]}
  onResponderRelease={[Function]}
  onResponderTerminate={[Function]}
  onResponderTerminationRequest={[Function]}
  onStartShouldSetResponder={[Function]}
  style={
    Object {
      "flexDirection": "row",
    }
  }
>
  <View
    disabled={false}
    full={false}
    inverted={true}
    pressed={false}
    secondary={true}
    small={false}
    style={
      Array [
        Object {
          "alignItems": "center",
          "backgroundColor": "#FFFFFF",
          "borderRadius": 9999,
          "flexDirection": "row",
          "height": 48,
          "justifyContent": "center",
          "paddingLeft": 24,
          "paddingRight": 24,
        },
      ]
    }
  >
    <Text
      color="#231B22"
      disabled={false}
      inverted={true}
      pressed={false}
      small={false}
      style={
        Array [
          Object {
            "color": "#231B22",
            "fontFamily": "Rubik",
            "fontSize": 16,
            "fontWeight": "500",
            "textAlign": "center",
          },
        ]
      }
    >
      Button
    </Text>
  </View>
</View>
`;

exports[`<Button /> Snapshots secondary buttons With inverted prop should match snapshot with default Button with Icon 1`] = `
<View
  accessible={true}
  focusable={false}
  onClick={[Function]}
  onResponderGrant={[Function]}
  onResponderMove={[Function]}
  onResponderRelease={[Function]}
  onResponderTerminate={[Function]}
  onResponderTerminationRequest={[Function]}
  onStartShouldSetResponder={[Function]}
  style={
    Object {
      "flexDirection": "row",
    }
  }
>
  <View
    disabled={false}
    full={false}
    inverted={true}
    pressed={false}
    secondary={true}
    small={false}
    style={
      Array [
        Object {
          "alignItems": "center",
          "backgroundColor": "#FFFFFF",
          "borderRadius": 9999,
          "flexDirection": "row",
          "height": 48,
          "justifyContent": "center",
          "paddingLeft": 24,
          "paddingRight": 24,
        },
      ]
    }
  >
    <RNSVGSvgView
      bbHeight={24}
      bbWidth={24}
      fill="#231B22"
      focusable={false}
      height={24}
      style={
        Array [
          Object {
            "backgroundColor": "transparent",
            "borderWidth": 0,
          },
          Object {
            "marginRight": 8,
          },
          Object {
            "opacity": 1,
          },
          Object {
            "flex": 0,
            "height": 24,
            "width": 24,
          },
        ]
      }
      width={24}
    >
      <RNSVGGroup
        fill={
          Array [
            0,
            4280490786,
          ]
        }
        fillOpacity={1}
        fillRule={1}
        font={Object {}}
        matrix={
          Array [
            1,
            0,
            0,
            1,
            0,
            0,
          ]
        }
        opacity={1}
        originX={0}
        originY={0}
        propList={
          Array [
            "fill",
          ]
        }
        rotation={0}
        scaleX={1}
        scaleY={1}
        skewX={0}
        skewY={0}
        stroke={null}
        strokeDasharray={null}
        strokeDashoffset={null}
        strokeLinecap={0}
        strokeLinejoin={0}
        strokeMiterlimit={4}
        strokeOpacity={1}
        strokeWidth={1}
        vectorEffect={0}
        x={0}
        y={0}
      />
    </RNSVGSvgView>
    <Text
      color="#231B22"
      disabled={false}
      inverted={true}
      pressed={false}
      small={false}
      style={
        Array [
          Object {
            "color": "#231B22",
            "fontFamily": "Rubik",
            "fontSize": 16,
            "fontWeight": "500",
            "textAlign": "center",
          },
        ]
      }
    >
      Button
    </Text>
  </View>
</View>
`;

exports[`<Button /> Snapshots secondary buttons With inverted prop should match snapshot with icon Button with Icon 1`] = `
<View
  accessible={true}
  focusable={false}
  onClick={[Function]}
  onResponderGrant={[Function]}
  onResponderMove={[Function]}
  onResponderRelease={[Function]}
  onResponderTerminate={[Function]}
  onResponderTerminationRequest={[Function]}
  onStartShouldSetResponder={[Function]}
  style={
    Object {
      "flexDirection": "row",
    }
  }
>
  <View
    accessibilityRole="button"
    disabled={false}
    inverted={true}
    pressed={false}
    secondary={true}
    small={false}
    style={
      Array [
        Object {
          "alignItems": "center",
          "backgroundColor": "#FFFFFF",
          "borderRadius": 9999,
          "display": "flex",
          "height": 48,
          "justifyContent": "center",
          "width": 48,
        },
      ]
    }
  >
    <RNSVGSvgView
      bbHeight={24}
      bbWidth={24}
      fill="#231B22"
      focusable={false}
      height={24}
      style={
        Array [
          Object {
            "backgroundColor": "transparent",
            "borderWidth": 0,
          },
          Array [
            Object {
              "height": 24,
              "width": 24,
            },
          ],
          Object {
            "opacity": 1,
          },
          Object {
            "flex": 0,
            "height": 24,
            "width": 24,
          },
        ]
      }
      width={24}
    >
      <RNSVGGroup
        fill={
          Array [
            0,
            4280490786,
          ]
        }
        fillOpacity={1}
        fillRule={1}
        font={Object {}}
        matrix={
          Array [
            1,
            0,
            0,
            1,
            0,
            0,
          ]
        }
        opacity={1}
        originX={0}
        originY={0}
        propList={
          Array [
            "fill",
          ]
        }
        rotation={0}
        scaleX={1}
        scaleY={1}
        skewX={0}
        skewY={0}
        stroke={null}
        strokeDasharray={null}
        strokeDashoffset={null}
        strokeLinecap={0}
        strokeLinejoin={0}
        strokeMiterlimit={4}
        strokeOpacity={1}
        strokeWidth={1}
        vectorEffect={0}
        x={0}
        y={0}
      />
    </RNSVGSvgView>
  </View>
</View>
`;

exports[`<Button /> Snapshots secondary buttons With inverted prop should match snapshot with text Button 1`] = `
<View
  accessible={true}
  focusable={false}
  onClick={[Function]}
  onResponderGrant={[Function]}
  onResponderMove={[Function]}
  onResponderRelease={[Function]}
  onResponderTerminate={[Function]}
  onResponderTerminationRequest={[Function]}
  onStartShouldSetResponder={[Function]}
  style={
    Object {
      "flexDirection": "row",
    }
  }
>
  <View
    pressed={false}
    style={
      Array [
        Object {
          "alignItems": "center",
          "backgroundColor": "transparent",
          "borderRadius": 9999,
          "flexDirection": "row",
          "height": 48,
          "justifyContent": "center",
          "paddingLeft": 24,
          "paddingRight": 24,
        },
      ]
    }
  >
    <Text
      color="#FFFFFF"
      pressed={false}
      secondary={true}
      style={
        Array [
          Object {
            "color": "#FFFFFF",
            "fontFamily": "Rubik",
            "fontSize": 16,
            "fontWeight": "500",
            "textAlign": "center",
          },
        ]
      }
    />
  </View>
</View>
`;

exports[`<Button /> Snapshots secondary buttons With inverted prop should match snapshot with text Button with Icon 1`] = `
<View
  accessible={true}
  focusable={false}
  onClick={[Function]}
  onResponderGrant={[Function]}
  onResponderMove={[Function]}
  onResponderRelease={[Function]}
  onResponderTerminate={[Function]}
  onResponderTerminationRequest={[Function]}
  onStartShouldSetResponder={[Function]}
  style={
    Object {
      "flexDirection": "row",
    }
  }
>
  <View
    pressed={false}
    style={
      Array [
        Object {
          "alignItems": "center",
          "backgroundColor": "transparent",
          "borderRadius": 9999,
          "flexDirection": "row",
          "height": 48,
          "justifyContent": "center",
          "paddingLeft": 24,
          "paddingRight": 24,
        },
      ]
    }
  >
    <RNSVGSvgView
      bbHeight={24}
      bbWidth={24}
      fill="#FFFFFF"
      focusable={false}
      height={24}
      style={
        Array [
          Object {
            "backgroundColor": "transparent",
            "borderWidth": 0,
          },
          Object {
            "marginRight": 8,
          },
          Object {
            "opacity": 1,
          },
          Object {
            "flex": 0,
            "height": 24,
            "width": 24,
          },
        ]
      }
      width={24}
    >
      <RNSVGGroup
        fill={
          Array [
            0,
            4294967295,
          ]
        }
        fillOpacity={1}
        fillRule={1}
        font={Object {}}
        matrix={
          Array [
            1,
            0,
            0,
            1,
            0,
            0,
          ]
        }
        opacity={1}
        originX={0}
        originY={0}
        propList={
          Array [
            "fill",
          ]
        }
        rotation={0}
        scaleX={1}
        scaleY={1}
        skewX={0}
        skewY={0}
        stroke={null}
        strokeDasharray={null}
        strokeDashoffset={null}
        strokeLinecap={0}
        strokeLinejoin={0}
        strokeMiterlimit={4}
        strokeOpacity={1}
        strokeWidth={1}
        vectorEffect={0}
        x={0}
        y={0}
      />
    </RNSVGSvgView>
    <Text
      color="#FFFFFF"
      pressed={false}
      secondary={true}
      style={
        Array [
          Object {
            "color": "#FFFFFF",
            "fontFamily": "Rubik",
            "fontSize": 16,
            "fontWeight": "500",
            "textAlign": "center",
          },
        ]
      }
    />
  </View>
</View>
`;

exports[`<Button /> Snapshots secondary buttons With large prop should match snapshot icon Button with large prop 1`] = `
<View
  accessible={true}
  focusable={false}
  onClick={[Function]}
  onResponderGrant={[Function]}
  onResponderMove={[Function]}
  onResponderRelease={[Function]}
  onResponderTerminate={[Function]}
  onResponderTerminationRequest={[Function]}
  onStartShouldSetResponder={[Function]}
  style={
    Object {
      "flexDirection": "row",
    }
  }
>
  <View
    accessibilityRole="button"
    disabled={false}
    inverted={false}
    large={true}
    pressed={false}
    secondary={true}
    small={false}
    style={
      Array [
        Object {
          "alignItems": "center",
          "backgroundColor": "#231B22",
          "borderRadius": 9999,
          "display": "flex",
          "height": 48,
          "justifyContent": "center",
          "width": 48,
        },
      ]
    }
  >
    <RNSVGSvgView
      bbHeight={24}
      bbWidth={24}
      fill="#FFFFFF"
      focusable={false}
      height={24}
      style={
        Array [
          Object {
            "backgroundColor": "transparent",
            "borderWidth": 0,
          },
          Array [
            Object {
              "height": 24,
              "width": 24,
            },
          ],
          Object {
            "opacity": 1,
          },
          Object {
            "flex": 0,
            "height": 24,
            "width": 24,
          },
        ]
      }
      width={24}
    >
      <RNSVGGroup
        fill={
          Array [
            0,
            4294967295,
          ]
        }
        fillOpacity={1}
        fillRule={1}
        font={Object {}}
        matrix={
          Array [
            1,
            0,
            0,
            1,
            0,
            0,
          ]
        }
        opacity={1}
        originX={0}
        originY={0}
        propList={
          Array [
            "fill",
          ]
        }
        rotation={0}
        scaleX={1}
        scaleY={1}
        skewX={0}
        skewY={0}
        stroke={null}
        strokeDasharray={null}
        strokeDashoffset={null}
        strokeLinecap={0}
        strokeLinejoin={0}
        strokeMiterlimit={4}
        strokeOpacity={1}
        strokeWidth={1}
        vectorEffect={0}
        x={0}
        y={0}
      />
    </RNSVGSvgView>
  </View>
</View>
`;

exports[`<Button /> Snapshots secondary buttons With small prop should match snapshot with default Button 1`] = `
<View
  accessible={true}
  focusable={false}
  onClick={[Function]}
  onResponderGrant={[Function]}
  onResponderMove={[Function]}
  onResponderRelease={[Function]}
  onResponderTerminate={[Function]}
  onResponderTerminationRequest={[Function]}
  onStartShouldSetResponder={[Function]}
  style={
    Object {
      "flexDirection": "row",
    }
  }
>
  <View
    disabled={false}
    full={false}
    inverted={false}
    pressed={false}
    secondary={true}
    small={true}
    style={
      Array [
        Object {
          "alignItems": "center",
          "backgroundColor": "#231B22",
          "borderRadius": 9999,
          "flexDirection": "row",
          "height": 32,
          "justifyContent": "center",
          "paddingLeft": 16,
          "paddingRight": 16,
        },
      ]
    }
  >
    <Text
      color="#FFFFFF"
      disabled={false}
      inverted={false}
      pressed={false}
      small={true}
      style={
        Array [
          Object {
            "color": "#FFFFFF",
            "fontFamily": "Rubik",
            "fontSize": 14,
            "fontWeight": "500",
            "textAlign": "center",
          },
        ]
      }
    >
      Button
    </Text>
  </View>
</View>
`;

exports[`<Button /> Snapshots secondary buttons With small prop should match snapshot with default Button with Icon 1`] = `
<View
  accessible={true}
  focusable={false}
  onClick={[Function]}
  onResponderGrant={[Function]}
  onResponderMove={[Function]}
  onResponderRelease={[Function]}
  onResponderTerminate={[Function]}
  onResponderTerminationRequest={[Function]}
  onStartShouldSetResponder={[Function]}
  style={
    Object {
      "flexDirection": "row",
    }
  }
>
  <View
    disabled={false}
    full={false}
    inverted={false}
    pressed={false}
    secondary={true}
    small={true}
    style={
      Array [
        Object {
          "alignItems": "center",
          "backgroundColor": "#231B22",
          "borderRadius": 9999,
          "flexDirection": "row",
          "height": 32,
          "justifyContent": "center",
          "paddingLeft": 16,
          "paddingRight": 16,
        },
      ]
    }
  >
    <RNSVGSvgView
      bbHeight={16}
      bbWidth={16}
      fill="#FFFFFF"
      focusable={false}
      height={16}
      style={
        Array [
          Object {
            "backgroundColor": "transparent",
            "borderWidth": 0,
          },
          Object {
            "marginRight": 8,
          },
          Object {
            "opacity": 1,
          },
          Object {
            "flex": 0,
            "height": 16,
            "width": 16,
          },
        ]
      }
      width={16}
    >
      <RNSVGGroup
        fill={
          Array [
            0,
            4294967295,
          ]
        }
        fillOpacity={1}
        fillRule={1}
        font={Object {}}
        matrix={
          Array [
            1,
            0,
            0,
            1,
            0,
            0,
          ]
        }
        opacity={1}
        originX={0}
        originY={0}
        propList={
          Array [
            "fill",
          ]
        }
        rotation={0}
        scaleX={1}
        scaleY={1}
        skewX={0}
        skewY={0}
        stroke={null}
        strokeDasharray={null}
        strokeDashoffset={null}
        strokeLinecap={0}
        strokeLinejoin={0}
        strokeMiterlimit={4}
        strokeOpacity={1}
        strokeWidth={1}
        vectorEffect={0}
        x={0}
        y={0}
      />
    </RNSVGSvgView>
    <Text
      color="#FFFFFF"
      disabled={false}
      inverted={false}
      pressed={false}
      small={true}
      style={
        Array [
          Object {
            "color": "#FFFFFF",
            "fontFamily": "Rubik",
            "fontSize": 14,
            "fontWeight": "500",
            "textAlign": "center",
          },
        ]
      }
    >
      Button
    </Text>
  </View>
</View>
`;

exports[`<Button /> Snapshots secondary buttons With small prop should match snapshot with text Button 1`] = `
<View
  accessible={true}
  focusable={false}
  onClick={[Function]}
  onResponderGrant={[Function]}
  onResponderMove={[Function]}
  onResponderRelease={[Function]}
  onResponderTerminate={[Function]}
  onResponderTerminationRequest={[Function]}
  onStartShouldSetResponder={[Function]}
  style={
    Object {
      "flexDirection": "row",
    }
  }
>
  <View
    pressed={false}
    small={true}
    style={
      Array [
        Object {
          "alignItems": "center",
          "backgroundColor": "transparent",
          "borderRadius": 9999,
          "flexDirection": "row",
          "height": 32,
          "justifyContent": "center",
          "paddingLeft": 16,
          "paddingRight": 16,
        },
      ]
    }
  >
    <Text
      color="#231B22"
      pressed={false}
      secondary={true}
      small={true}
      style={
        Array [
          Object {
            "color": "#231B22",
            "fontFamily": "Rubik",
            "fontSize": 14,
            "fontWeight": "500",
            "textAlign": "center",
          },
        ]
      }
    />
  </View>
</View>
`;

exports[`<Button /> Snapshots secondary buttons With small prop should match snapshot with text Button with Icon 1`] = `
<View
  accessible={true}
  focusable={false}
  onClick={[Function]}
  onResponderGrant={[Function]}
  onResponderMove={[Function]}
  onResponderRelease={[Function]}
  onResponderTerminate={[Function]}
  onResponderTerminationRequest={[Function]}
  onStartShouldSetResponder={[Function]}
  style={
    Object {
      "flexDirection": "row",
    }
  }
>
  <View
    pressed={false}
    small={true}
    style={
      Array [
        Object {
          "alignItems": "center",
          "backgroundColor": "transparent",
          "borderRadius": 9999,
          "flexDirection": "row",
          "height": 32,
          "justifyContent": "center",
          "paddingLeft": 16,
          "paddingRight": 16,
        },
      ]
    }
  >
    <RNSVGSvgView
      bbHeight={16}
      bbWidth={16}
      fill="#231B22"
      focusable={false}
      height={16}
      style={
        Array [
          Object {
            "backgroundColor": "transparent",
            "borderWidth": 0,
          },
          Object {
            "marginRight": 8,
          },
          Object {
            "opacity": 1,
          },
          Object {
            "flex": 0,
            "height": 16,
            "width": 16,
          },
        ]
      }
      width={16}
    >
      <RNSVGGroup
        fill={
          Array [
            0,
            4280490786,
          ]
        }
        fillOpacity={1}
        fillRule={1}
        font={Object {}}
        matrix={
          Array [
            1,
            0,
            0,
            1,
            0,
            0,
          ]
        }
        opacity={1}
        originX={0}
        originY={0}
        propList={
          Array [
            "fill",
          ]
        }
        rotation={0}
        scaleX={1}
        scaleY={1}
        skewX={0}
        skewY={0}
        stroke={null}
        strokeDasharray={null}
        strokeDashoffset={null}
        strokeLinecap={0}
        strokeLinejoin={0}
        strokeMiterlimit={4}
        strokeOpacity={1}
        strokeWidth={1}
        vectorEffect={0}
        x={0}
        y={0}
      />
    </RNSVGSvgView>
    <Text
      color="#231B22"
      pressed={false}
      secondary={true}
      small={true}
      style={
        Array [
          Object {
            "color": "#231B22",
            "fontFamily": "Rubik",
            "fontSize": 14,
            "fontWeight": "500",
            "textAlign": "center",
          },
        ]
      }
    />
  </View>
</View>
`;

exports[`<Button /> Snapshots secondary buttons Without props should match snapshot with default Button 1`] = `
<View
  accessible={true}
  focusable={false}
  onClick={[Function]}
  onResponderGrant={[Function]}
  onResponderMove={[Function]}
  onResponderRelease={[Function]}
  onResponderTerminate={[Function]}
  onResponderTerminationRequest={[Function]}
  onStartShouldSetResponder={[Function]}
  style={
    Object {
      "flexDirection": "row",
    }
  }
>
  <View
    disabled={false}
    full={false}
    inverted={false}
    pressed={false}
    secondary={true}
    small={false}
    style={
      Array [
        Object {
          "alignItems": "center",
          "backgroundColor": "#231B22",
          "borderRadius": 9999,
          "flexDirection": "row",
          "height": 48,
          "justifyContent": "center",
          "paddingLeft": 24,
          "paddingRight": 24,
        },
      ]
    }
  >
    <Text
      color="#FFFFFF"
      disabled={false}
      inverted={false}
      pressed={false}
      small={false}
      style={
        Array [
          Object {
            "color": "#FFFFFF",
            "fontFamily": "Rubik",
            "fontSize": 16,
            "fontWeight": "500",
            "textAlign": "center",
          },
        ]
      }
    >
      Button
    </Text>
  </View>
</View>
`;

exports[`<Button /> Snapshots secondary buttons Without props should match snapshot with default Button with Icon 1`] = `
<View
  accessible={true}
  focusable={false}
  onClick={[Function]}
  onResponderGrant={[Function]}
  onResponderMove={[Function]}
  onResponderRelease={[Function]}
  onResponderTerminate={[Function]}
  onResponderTerminationRequest={[Function]}
  onStartShouldSetResponder={[Function]}
  style={
    Object {
      "flexDirection": "row",
    }
  }
>
  <View
    disabled={false}
    full={false}
    inverted={false}
    pressed={false}
    secondary={true}
    small={false}
    style={
      Array [
        Object {
          "alignItems": "center",
          "backgroundColor": "#231B22",
          "borderRadius": 9999,
          "flexDirection": "row",
          "height": 48,
          "justifyContent": "center",
          "paddingLeft": 24,
          "paddingRight": 24,
        },
      ]
    }
  >
    <RNSVGSvgView
      bbHeight={24}
      bbWidth={24}
      fill="#FFFFFF"
      focusable={false}
      height={24}
      style={
        Array [
          Object {
            "backgroundColor": "transparent",
            "borderWidth": 0,
          },
          Object {
            "marginRight": 8,
          },
          Object {
            "opacity": 1,
          },
          Object {
            "flex": 0,
            "height": 24,
            "width": 24,
          },
        ]
      }
      width={24}
    >
      <RNSVGGroup
        fill={
          Array [
            0,
            4294967295,
          ]
        }
        fillOpacity={1}
        fillRule={1}
        font={Object {}}
        matrix={
          Array [
            1,
            0,
            0,
            1,
            0,
            0,
          ]
        }
        opacity={1}
        originX={0}
        originY={0}
        propList={
          Array [
            "fill",
          ]
        }
        rotation={0}
        scaleX={1}
        scaleY={1}
        skewX={0}
        skewY={0}
        stroke={null}
        strokeDasharray={null}
        strokeDashoffset={null}
        strokeLinecap={0}
        strokeLinejoin={0}
        strokeMiterlimit={4}
        strokeOpacity={1}
        strokeWidth={1}
        vectorEffect={0}
        x={0}
        y={0}
      />
    </RNSVGSvgView>
    <Text
      color="#FFFFFF"
      disabled={false}
      inverted={false}
      pressed={false}
      small={false}
      style={
        Array [
          Object {
            "color": "#FFFFFF",
            "fontFamily": "Rubik",
            "fontSize": 16,
            "fontWeight": "500",
            "textAlign": "center",
          },
        ]
      }
    >
      Button
    </Text>
  </View>
</View>
`;

exports[`<Button /> Snapshots secondary buttons Without props should match snapshot with icon Button with Icon 1`] = `
<View
  accessible={true}
  focusable={false}
  onClick={[Function]}
  onResponderGrant={[Function]}
  onResponderMove={[Function]}
  onResponderRelease={[Function]}
  onResponderTerminate={[Function]}
  onResponderTerminationRequest={[Function]}
  onStartShouldSetResponder={[Function]}
  style={
    Object {
      "flexDirection": "row",
    }
  }
>
  <View
    accessibilityRole="button"
    disabled={false}
    inverted={false}
    pressed={false}
    secondary={true}
    small={false}
    style={
      Array [
        Object {
          "alignItems": "center",
          "backgroundColor": "#231B22",
          "borderRadius": 9999,
          "display": "flex",
          "height": 48,
          "justifyContent": "center",
          "width": 48,
        },
      ]
    }
  >
    <RNSVGSvgView
      bbHeight={24}
      bbWidth={24}
      fill="#FFFFFF"
      focusable={false}
      height={24}
      style={
        Array [
          Object {
            "backgroundColor": "transparent",
            "borderWidth": 0,
          },
          Array [
            Object {
              "height": 24,
              "width": 24,
            },
          ],
          Object {
            "opacity": 1,
          },
          Object {
            "flex": 0,
            "height": 24,
            "width": 24,
          },
        ]
      }
      width={24}
    >
      <RNSVGGroup
        fill={
          Array [
            0,
            4294967295,
          ]
        }
        fillOpacity={1}
        fillRule={1}
        font={Object {}}
        matrix={
          Array [
            1,
            0,
            0,
            1,
            0,
            0,
          ]
        }
        opacity={1}
        originX={0}
        originY={0}
        propList={
          Array [
            "fill",
          ]
        }
        rotation={0}
        scaleX={1}
        scaleY={1}
        skewX={0}
        skewY={0}
        stroke={null}
        strokeDasharray={null}
        strokeDashoffset={null}
        strokeLinecap={0}
        strokeLinejoin={0}
        strokeMiterlimit={4}
        strokeOpacity={1}
        strokeWidth={1}
        vectorEffect={0}
        x={0}
        y={0}
      />
    </RNSVGSvgView>
  </View>
</View>
`;

exports[`<Button /> Snapshots secondary buttons Without props should match snapshot with link Button 1`] = `
<View
  accessible={true}
  focusable={false}
  onClick={[Function]}
  onResponderGrant={[Function]}
  onResponderMove={[Function]}
  onResponderRelease={[Function]}
  onResponderTerminate={[Function]}
  onResponderTerminationRequest={[Function]}
  onStartShouldSetResponder={[Function]}
  style={
    Object {
      "flexDirection": "row",
    }
  }
>
  <Text
    disabled={false}
    pressed={false}
    secondary={true}
    style={
      Array [
        Object {
          "color": "#231B22",
          "fontFamily": "Rubik",
          "fontSize": 16,
          "fontWeight": "500",
          "textAlign": "center",
        },
      ]
    }
  />
</View>
`;

exports[`<Button /> Snapshots secondary buttons Without props should match snapshot with text Button 1`] = `
<View
  accessible={true}
  focusable={false}
  onClick={[Function]}
  onResponderGrant={[Function]}
  onResponderMove={[Function]}
  onResponderRelease={[Function]}
  onResponderTerminate={[Function]}
  onResponderTerminationRequest={[Function]}
  onStartShouldSetResponder={[Function]}
  style={
    Object {
      "flexDirection": "row",
    }
  }
>
  <View
    pressed={false}
    style={
      Array [
        Object {
          "alignItems": "center",
          "backgroundColor": "transparent",
          "borderRadius": 9999,
          "flexDirection": "row",
          "height": 48,
          "justifyContent": "center",
          "paddingLeft": 24,
          "paddingRight": 24,
        },
      ]
    }
  >
    <Text
      color="#231B22"
      pressed={false}
      secondary={true}
      style={
        Array [
          Object {
            "color": "#231B22",
            "fontFamily": "Rubik",
            "fontSize": 16,
            "fontWeight": "500",
            "textAlign": "center",
          },
        ]
      }
    />
  </View>
</View>
`;

exports[`<Button /> Snapshots secondary buttons Without props should match snapshot with text Button with Icon 1`] = `
<View
  accessible={true}
  focusable={false}
  onClick={[Function]}
  onResponderGrant={[Function]}
  onResponderMove={[Function]}
  onResponderRelease={[Function]}
  onResponderTerminate={[Function]}
  onResponderTerminationRequest={[Function]}
  onStartShouldSetResponder={[Function]}
  style={
    Object {
      "flexDirection": "row",
    }
  }
>
  <View
    pressed={false}
    style={
      Array [
        Object {
          "alignItems": "center",
          "backgroundColor": "transparent",
          "borderRadius": 9999,
          "flexDirection": "row",
          "height": 48,
          "justifyContent": "center",
          "paddingLeft": 24,
          "paddingRight": 24,
        },
      ]
    }
  >
    <RNSVGSvgView
      bbHeight={24}
      bbWidth={24}
      fill="#231B22"
      focusable={false}
      height={24}
      style={
        Array [
          Object {
            "backgroundColor": "transparent",
            "borderWidth": 0,
          },
          Object {
            "marginRight": 8,
          },
          Object {
            "opacity": 1,
          },
          Object {
            "flex": 0,
            "height": 24,
            "width": 24,
          },
        ]
      }
      width={24}
    >
      <RNSVGGroup
        fill={
          Array [
            0,
            4280490786,
          ]
        }
        fillOpacity={1}
        fillRule={1}
        font={Object {}}
        matrix={
          Array [
            1,
            0,
            0,
            1,
            0,
            0,
          ]
        }
        opacity={1}
        originX={0}
        originY={0}
        propList={
          Array [
            "fill",
          ]
        }
        rotation={0}
        scaleX={1}
        scaleY={1}
        skewX={0}
        skewY={0}
        stroke={null}
        strokeDasharray={null}
        strokeDashoffset={null}
        strokeLinecap={0}
        strokeLinejoin={0}
        strokeMiterlimit={4}
        strokeOpacity={1}
        strokeWidth={1}
        vectorEffect={0}
        x={0}
        y={0}
      />
    </RNSVGSvgView>
    <Text
      color="#231B22"
      pressed={false}
      secondary={true}
      style={
        Array [
          Object {
            "color": "#231B22",
            "fontFamily": "Rubik",
            "fontSize": 16,
            "fontWeight": "500",
            "textAlign": "center",
          },
        ]
      }
    />
  </View>
</View>
`;
