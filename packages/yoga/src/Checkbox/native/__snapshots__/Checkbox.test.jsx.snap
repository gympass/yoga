// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`<Checkbox /> Snapshots should match snapshot with checked checkbox 1`] = `
<View>
  <View
    accessibilityState={
      Object {
        "disabled": false,
      }
    }
    accessible={true}
    focusable={false}
    onClick={[Function]}
    onResponderGrant={[Function]}
    onResponderMove={[Function]}
    onResponderRelease={[Function]}
    onResponderTerminate={[Function]}
    onResponderTerminationRequest={[Function]}
    onStartShouldSetResponder={[Function]}
    style={
      Array [
        Object {
          "alignItems": "center",
          "flexDirection": "row",
        },
        Object {},
      ]
    }
  >
    <View
      style={
        Array [
          Object {
            "alignItems": "center",
            "height": 24,
            "justifyContent": "center",
            "width": 24,
          },
        ]
      }
    >
      <View
        checked={true}
        disabled={false}
        inverted={false}
        pressed={false}
        style={
          Array [
            Object {
              "backgroundColor": "#D8385E",
              "borderColor": "#D8385E",
              "borderRadius": 4,
              "borderStyle": "solid",
              "borderWidth": 2,
              "height": 24,
              "position": "absolute",
              "width": 24,
            },
          ]
        }
      />
      <RNSVGSvgView
        bbHeight={24}
        bbWidth={24}
        fill="#FFFFFF"
        focusable={false}
        height={24}
        style={
          Array [
            Object {
              "backgroundColor": "transparent",
              "borderWidth": 0,
            },
            Object {
              "position": "absolute",
            },
            Object {
              "opacity": 1,
            },
            Object {
              "flex": 0,
              "height": 24,
              "width": 24,
            },
          ]
        }
        width={24}
      >
        <RNSVGGroup
          fill={
            Array [
              0,
              4294967295,
            ]
          }
          fillOpacity={1}
          fillRule={1}
          font={Object {}}
          matrix={
            Array [
              1,
              0,
              0,
              1,
              0,
              0,
            ]
          }
          opacity={1}
          originX={0}
          originY={0}
          propList={
            Array [
              "fill",
            ]
          }
          rotation={0}
          scaleX={1}
          scaleY={1}
          skewX={0}
          skewY={0}
          stroke={null}
          strokeDasharray={null}
          strokeDashoffset={null}
          strokeLinecap={0}
          strokeLinejoin={0}
          strokeMiterlimit={4}
          strokeOpacity={1}
          strokeWidth={1}
          vectorEffect={0}
          x={0}
          y={0}
        />
      </RNSVGSvgView>
    </View>
    <Text
      style={
        Array [
          Object {
            "color": "#231B22",
            "fontFamily": "Rubik",
            "fontSize": 16,
            "fontWeight": "400",
            "paddingLeft": 8,
          },
        ]
      }
    >
      Checkbox Component
    </Text>
  </View>
  <View
    style={
      Array [
        Object {
          "marginTop": 4,
        },
      ]
    }
  >
    <Text
      style={
        Array [
          Object {
            "color": "#6B6B78",
            "fontFamily": "Rubik",
            "fontSize": 14,
            "fontWeight": "400",
          },
        ]
      }
    >
      Helper Text
    </Text>
  </View>
</View>
`;

exports[`<Checkbox /> Snapshots should match snapshot with default checkbox 1`] = `
<View>
  <View
    accessibilityState={
      Object {
        "disabled": false,
      }
    }
    accessible={true}
    focusable={false}
    onClick={[Function]}
    onResponderGrant={[Function]}
    onResponderMove={[Function]}
    onResponderRelease={[Function]}
    onResponderTerminate={[Function]}
    onResponderTerminationRequest={[Function]}
    onStartShouldSetResponder={[Function]}
    style={
      Array [
        Object {
          "alignItems": "center",
          "flexDirection": "row",
        },
        Object {},
      ]
    }
  >
    <View
      style={
        Array [
          Object {
            "alignItems": "center",
            "height": 24,
            "justifyContent": "center",
            "width": 24,
          },
        ]
      }
    >
      <View
        checked={false}
        disabled={false}
        inverted={false}
        pressed={false}
        style={
          Array [
            Object {
              "backgroundColor": "transparent",
              "borderColor": "#D8385E",
              "borderRadius": 4,
              "borderStyle": "solid",
              "borderWidth": 2,
              "height": 24,
              "position": "absolute",
              "width": 24,
            },
          ]
        }
      />
    </View>
    <Text
      style={
        Array [
          Object {
            "color": "#231B22",
            "fontFamily": "Rubik",
            "fontSize": 16,
            "fontWeight": "400",
            "paddingLeft": 8,
          },
        ]
      }
    >
      Checkbox Component
    </Text>
  </View>
  <View
    style={
      Array [
        Object {
          "marginTop": 4,
        },
      ]
    }
  >
    <Text
      style={
        Array [
          Object {
            "color": "#6B6B78",
            "fontFamily": "Rubik",
            "fontSize": 14,
            "fontWeight": "400",
          },
        ]
      }
    >
      Helper Text
    </Text>
  </View>
</View>
`;

exports[`<Checkbox /> Snapshots should match snapshot with disabled and checked checkbox 1`] = `
<View>
  <View
    accessibilityState={
      Object {
        "disabled": true,
      }
    }
    accessible={true}
    focusable={false}
    onClick={[Function]}
    onResponderGrant={[Function]}
    onResponderMove={[Function]}
    onResponderRelease={[Function]}
    onResponderTerminate={[Function]}
    onResponderTerminationRequest={[Function]}
    onStartShouldSetResponder={[Function]}
    style={
      Array [
        Object {
          "alignItems": "center",
          "flexDirection": "row",
        },
        Object {},
      ]
    }
  >
    <View
      style={
        Array [
          Object {
            "alignItems": "center",
            "height": 24,
            "justifyContent": "center",
            "width": 24,
          },
        ]
      }
    >
      <View
        checked={true}
        disabled={true}
        inverted={false}
        pressed={false}
        style={
          Array [
            Object {
              "backgroundColor": "#D7D7E0",
              "borderColor": "#D7D7E0",
              "borderRadius": 4,
              "borderStyle": "solid",
              "borderWidth": 2,
              "height": 24,
              "position": "absolute",
              "width": 24,
            },
          ]
        }
      />
      <RNSVGSvgView
        bbHeight={24}
        bbWidth={24}
        fill="#FFFFFF"
        focusable={false}
        height={24}
        style={
          Array [
            Object {
              "backgroundColor": "transparent",
              "borderWidth": 0,
            },
            Object {
              "position": "absolute",
            },
            Object {
              "opacity": 1,
            },
            Object {
              "flex": 0,
              "height": 24,
              "width": 24,
            },
          ]
        }
        width={24}
      >
        <RNSVGGroup
          fill={
            Array [
              0,
              4294967295,
            ]
          }
          fillOpacity={1}
          fillRule={1}
          font={Object {}}
          matrix={
            Array [
              1,
              0,
              0,
              1,
              0,
              0,
            ]
          }
          opacity={1}
          originX={0}
          originY={0}
          propList={
            Array [
              "fill",
            ]
          }
          rotation={0}
          scaleX={1}
          scaleY={1}
          skewX={0}
          skewY={0}
          stroke={null}
          strokeDasharray={null}
          strokeDashoffset={null}
          strokeLinecap={0}
          strokeLinejoin={0}
          strokeMiterlimit={4}
          strokeOpacity={1}
          strokeWidth={1}
          vectorEffect={0}
          x={0}
          y={0}
        />
      </RNSVGSvgView>
    </View>
    <Text
      style={
        Array [
          Object {
            "color": "#231B22",
            "fontFamily": "Rubik",
            "fontSize": 16,
            "fontWeight": "400",
            "paddingLeft": 8,
          },
        ]
      }
    >
      Checkbox Component
    </Text>
  </View>
  <View
    style={
      Array [
        Object {
          "marginTop": 4,
        },
      ]
    }
  >
    <Text
      style={
        Array [
          Object {
            "color": "#6B6B78",
            "fontFamily": "Rubik",
            "fontSize": 14,
            "fontWeight": "400",
          },
        ]
      }
    >
      Helper Text
    </Text>
  </View>
</View>
`;

exports[`<Checkbox /> Snapshots should match snapshot with disabled checkbox 1`] = `
<View>
  <View
    accessibilityState={
      Object {
        "disabled": true,
      }
    }
    accessible={true}
    focusable={false}
    onClick={[Function]}
    onResponderGrant={[Function]}
    onResponderMove={[Function]}
    onResponderRelease={[Function]}
    onResponderTerminate={[Function]}
    onResponderTerminationRequest={[Function]}
    onStartShouldSetResponder={[Function]}
    style={
      Array [
        Object {
          "alignItems": "center",
          "flexDirection": "row",
        },
        Object {},
      ]
    }
  >
    <View
      style={
        Array [
          Object {
            "alignItems": "center",
            "height": 24,
            "justifyContent": "center",
            "width": 24,
          },
        ]
      }
    >
      <View
        checked={false}
        disabled={true}
        inverted={false}
        pressed={false}
        style={
          Array [
            Object {
              "backgroundColor": "transparent",
              "borderColor": "#D7D7E0",
              "borderRadius": 4,
              "borderStyle": "solid",
              "borderWidth": 2,
              "height": 24,
              "position": "absolute",
              "width": 24,
            },
          ]
        }
      />
    </View>
    <Text
      style={
        Array [
          Object {
            "color": "#231B22",
            "fontFamily": "Rubik",
            "fontSize": 16,
            "fontWeight": "400",
            "paddingLeft": 8,
          },
        ]
      }
    >
      Checkbox Component
    </Text>
  </View>
  <View
    style={
      Array [
        Object {
          "marginTop": 4,
        },
      ]
    }
  >
    <Text
      style={
        Array [
          Object {
            "color": "#6B6B78",
            "fontFamily": "Rubik",
            "fontSize": 14,
            "fontWeight": "400",
          },
        ]
      }
    >
      Helper Text
    </Text>
  </View>
</View>
`;

exports[`<Checkbox /> Snapshots should match snapshot with error and checked checkbox 1`] = `
<View>
  <View
    accessibilityState={
      Object {
        "disabled": false,
      }
    }
    accessible={true}
    focusable={false}
    onClick={[Function]}
    onResponderGrant={[Function]}
    onResponderMove={[Function]}
    onResponderRelease={[Function]}
    onResponderTerminate={[Function]}
    onResponderTerminationRequest={[Function]}
    onStartShouldSetResponder={[Function]}
    style={
      Array [
        Object {
          "alignItems": "center",
          "flexDirection": "row",
        },
        Object {},
      ]
    }
  >
    <View
      style={
        Array [
          Object {
            "alignItems": "center",
            "height": 24,
            "justifyContent": "center",
            "width": 24,
          },
        ]
      }
    >
      <View
        checked={true}
        disabled={false}
        error="Error text"
        inverted={false}
        pressed={false}
        style={
          Array [
            Object {
              "backgroundColor": "#CA4808",
              "borderColor": "#CA4808",
              "borderRadius": 4,
              "borderStyle": "solid",
              "borderWidth": 2,
              "height": 24,
              "position": "absolute",
              "width": 24,
            },
          ]
        }
      />
      <RNSVGSvgView
        bbHeight={24}
        bbWidth={24}
        fill="#FFFFFF"
        focusable={false}
        height={24}
        style={
          Array [
            Object {
              "backgroundColor": "transparent",
              "borderWidth": 0,
            },
            Object {
              "position": "absolute",
            },
            Object {
              "opacity": 1,
            },
            Object {
              "flex": 0,
              "height": 24,
              "width": 24,
            },
          ]
        }
        width={24}
      >
        <RNSVGGroup
          fill={
            Array [
              0,
              4294967295,
            ]
          }
          fillOpacity={1}
          fillRule={1}
          font={Object {}}
          matrix={
            Array [
              1,
              0,
              0,
              1,
              0,
              0,
            ]
          }
          opacity={1}
          originX={0}
          originY={0}
          propList={
            Array [
              "fill",
            ]
          }
          rotation={0}
          scaleX={1}
          scaleY={1}
          skewX={0}
          skewY={0}
          stroke={null}
          strokeDasharray={null}
          strokeDashoffset={null}
          strokeLinecap={0}
          strokeLinejoin={0}
          strokeMiterlimit={4}
          strokeOpacity={1}
          strokeWidth={1}
          vectorEffect={0}
          x={0}
          y={0}
        />
      </RNSVGSvgView>
    </View>
    <Text
      style={
        Array [
          Object {
            "color": "#231B22",
            "fontFamily": "Rubik",
            "fontSize": 16,
            "fontWeight": "400",
            "paddingLeft": 8,
          },
        ]
      }
    >
      Checkbox Component
    </Text>
  </View>
  <View
    style={
      Array [
        Object {
          "marginTop": 4,
        },
      ]
    }
  >
    <Text
      error="Error text"
      style={
        Array [
          Object {
            "color": "#CA4808",
            "fontFamily": "Rubik",
            "fontSize": 14,
            "fontWeight": "400",
          },
        ]
      }
    >
      Error text
    </Text>
  </View>
</View>
`;

exports[`<Checkbox /> Snapshots should match snapshot with error checkbox 1`] = `
<View>
  <View
    accessibilityState={
      Object {
        "disabled": false,
      }
    }
    accessible={true}
    focusable={false}
    onClick={[Function]}
    onResponderGrant={[Function]}
    onResponderMove={[Function]}
    onResponderRelease={[Function]}
    onResponderTerminate={[Function]}
    onResponderTerminationRequest={[Function]}
    onStartShouldSetResponder={[Function]}
    style={
      Array [
        Object {
          "alignItems": "center",
          "flexDirection": "row",
        },
        Object {},
      ]
    }
  >
    <View
      style={
        Array [
          Object {
            "alignItems": "center",
            "height": 24,
            "justifyContent": "center",
            "width": 24,
          },
        ]
      }
    >
      <View
        checked={false}
        disabled={false}
        error="Error text"
        inverted={false}
        pressed={false}
        style={
          Array [
            Object {
              "backgroundColor": "transparent",
              "borderColor": "#CA4808",
              "borderRadius": 4,
              "borderStyle": "solid",
              "borderWidth": 2,
              "height": 24,
              "position": "absolute",
              "width": 24,
            },
          ]
        }
      />
    </View>
    <Text
      style={
        Array [
          Object {
            "color": "#231B22",
            "fontFamily": "Rubik",
            "fontSize": 16,
            "fontWeight": "400",
            "paddingLeft": 8,
          },
        ]
      }
    >
      Checkbox Component
    </Text>
  </View>
  <View
    style={
      Array [
        Object {
          "marginTop": 4,
        },
      ]
    }
  >
    <Text
      error="Error text"
      style={
        Array [
          Object {
            "color": "#CA4808",
            "fontFamily": "Rubik",
            "fontSize": 14,
            "fontWeight": "400",
          },
        ]
      }
    >
      Error text
    </Text>
  </View>
</View>
`;

exports[`<Checkbox /> Snapshots should match snapshot with inverted 1`] = `
<View>
  <View
    accessibilityState={
      Object {
        "disabled": false,
      }
    }
    accessible={true}
    focusable={false}
    onClick={[Function]}
    onResponderGrant={[Function]}
    onResponderMove={[Function]}
    onResponderRelease={[Function]}
    onResponderTerminate={[Function]}
    onResponderTerminationRequest={[Function]}
    onStartShouldSetResponder={[Function]}
    style={
      Array [
        Object {
          "alignItems": "center",
          "flexDirection": "row",
        },
        Object {},
      ]
    }
  >
    <View
      style={
        Array [
          Object {
            "alignItems": "center",
            "height": 24,
            "justifyContent": "center",
            "width": 24,
          },
        ]
      }
    >
      <View
        checked={false}
        disabled={false}
        inverted={true}
        pressed={false}
        style={
          Array [
            Object {
              "backgroundColor": "transparent",
              "borderColor": "#FFFFFF",
              "borderRadius": 4,
              "borderStyle": "solid",
              "borderWidth": 2,
              "height": 24,
              "position": "absolute",
              "width": 24,
            },
          ]
        }
      />
    </View>
    <Text
      style={
        Array [
          Object {
            "color": "#231B22",
            "fontFamily": "Rubik",
            "fontSize": 16,
            "fontWeight": "400",
            "paddingLeft": 8,
          },
        ]
      }
    >
      Checkbox Component
    </Text>
  </View>
  <View
    style={
      Array [
        Object {
          "marginTop": 4,
        },
      ]
    }
  >
    <Text
      style={
        Array [
          Object {
            "color": "#6B6B78",
            "fontFamily": "Rubik",
            "fontSize": 14,
            "fontWeight": "400",
          },
        ]
      }
    >
      Helper Text
    </Text>
  </View>
</View>
`;

exports[`<Checkbox /> Snapshots should match snapshot with inverted and checked 1`] = `
<View>
  <View
    accessibilityState={
      Object {
        "disabled": false,
      }
    }
    accessible={true}
    focusable={false}
    onClick={[Function]}
    onResponderGrant={[Function]}
    onResponderMove={[Function]}
    onResponderRelease={[Function]}
    onResponderTerminate={[Function]}
    onResponderTerminationRequest={[Function]}
    onStartShouldSetResponder={[Function]}
    style={
      Array [
        Object {
          "alignItems": "center",
          "flexDirection": "row",
        },
        Object {},
      ]
    }
  >
    <View
      style={
        Array [
          Object {
            "alignItems": "center",
            "height": 24,
            "justifyContent": "center",
            "width": 24,
          },
        ]
      }
    >
      <View
        checked={true}
        disabled={false}
        inverted={true}
        pressed={false}
        style={
          Array [
            Object {
              "backgroundColor": "#FFFFFF",
              "borderColor": "#FFFFFF",
              "borderRadius": 4,
              "borderStyle": "solid",
              "borderWidth": 2,
              "height": 24,
              "position": "absolute",
              "width": 24,
            },
          ]
        }
      />
      <RNSVGSvgView
        bbHeight={24}
        bbWidth={24}
        fill="#D8385E"
        focusable={false}
        height={24}
        style={
          Array [
            Object {
              "backgroundColor": "transparent",
              "borderWidth": 0,
            },
            Object {
              "position": "absolute",
            },
            Object {
              "opacity": 1,
            },
            Object {
              "flex": 0,
              "height": 24,
              "width": 24,
            },
          ]
        }
        width={24}
      >
        <RNSVGGroup
          fill={
            Array [
              0,
              4292360286,
            ]
          }
          fillOpacity={1}
          fillRule={1}
          font={Object {}}
          matrix={
            Array [
              1,
              0,
              0,
              1,
              0,
              0,
            ]
          }
          opacity={1}
          originX={0}
          originY={0}
          propList={
            Array [
              "fill",
            ]
          }
          rotation={0}
          scaleX={1}
          scaleY={1}
          skewX={0}
          skewY={0}
          stroke={null}
          strokeDasharray={null}
          strokeDashoffset={null}
          strokeLinecap={0}
          strokeLinejoin={0}
          strokeMiterlimit={4}
          strokeOpacity={1}
          strokeWidth={1}
          vectorEffect={0}
          x={0}
          y={0}
        />
      </RNSVGSvgView>
    </View>
    <Text
      style={
        Array [
          Object {
            "color": "#231B22",
            "fontFamily": "Rubik",
            "fontSize": 16,
            "fontWeight": "400",
            "paddingLeft": 8,
          },
        ]
      }
    >
      Checkbox Component
    </Text>
  </View>
  <View
    style={
      Array [
        Object {
          "marginTop": 4,
        },
      ]
    }
  >
    <Text
      style={
        Array [
          Object {
            "color": "#6B6B78",
            "fontFamily": "Rubik",
            "fontSize": 14,
            "fontWeight": "400",
          },
        ]
      }
    >
      Helper Text
    </Text>
  </View>
</View>
`;

exports[`<Checkbox /> Snapshots should match snapshot with inverted and checked and disabled 1`] = `
<View>
  <View
    accessibilityState={
      Object {
        "disabled": true,
      }
    }
    accessible={true}
    focusable={false}
    onClick={[Function]}
    onResponderGrant={[Function]}
    onResponderMove={[Function]}
    onResponderRelease={[Function]}
    onResponderTerminate={[Function]}
    onResponderTerminationRequest={[Function]}
    onStartShouldSetResponder={[Function]}
    style={
      Array [
        Object {
          "alignItems": "center",
          "flexDirection": "row",
        },
        Object {},
      ]
    }
  >
    <View
      style={
        Array [
          Object {
            "alignItems": "center",
            "height": 24,
            "justifyContent": "center",
            "width": 24,
          },
        ]
      }
    >
      <View
        checked={true}
        disabled={true}
        inverted={true}
        pressed={false}
        style={
          Array [
            Object {
              "backgroundColor": "#D7D7E0",
              "borderColor": "#D7D7E0",
              "borderRadius": 4,
              "borderStyle": "solid",
              "borderWidth": 2,
              "height": 24,
              "position": "absolute",
              "width": 24,
            },
          ]
        }
      />
      <RNSVGSvgView
        bbHeight={24}
        bbWidth={24}
        fill="#D8385E"
        focusable={false}
        height={24}
        style={
          Array [
            Object {
              "backgroundColor": "transparent",
              "borderWidth": 0,
            },
            Object {
              "position": "absolute",
            },
            Object {
              "opacity": 1,
            },
            Object {
              "flex": 0,
              "height": 24,
              "width": 24,
            },
          ]
        }
        width={24}
      >
        <RNSVGGroup
          fill={
            Array [
              0,
              4292360286,
            ]
          }
          fillOpacity={1}
          fillRule={1}
          font={Object {}}
          matrix={
            Array [
              1,
              0,
              0,
              1,
              0,
              0,
            ]
          }
          opacity={1}
          originX={0}
          originY={0}
          propList={
            Array [
              "fill",
            ]
          }
          rotation={0}
          scaleX={1}
          scaleY={1}
          skewX={0}
          skewY={0}
          stroke={null}
          strokeDasharray={null}
          strokeDashoffset={null}
          strokeLinecap={0}
          strokeLinejoin={0}
          strokeMiterlimit={4}
          strokeOpacity={1}
          strokeWidth={1}
          vectorEffect={0}
          x={0}
          y={0}
        />
      </RNSVGSvgView>
    </View>
    <Text
      style={
        Array [
          Object {
            "color": "#231B22",
            "fontFamily": "Rubik",
            "fontSize": 16,
            "fontWeight": "400",
            "paddingLeft": 8,
          },
        ]
      }
    >
      Checkbox Component
    </Text>
  </View>
  <View
    style={
      Array [
        Object {
          "marginTop": 4,
        },
      ]
    }
  >
    <Text
      style={
        Array [
          Object {
            "color": "#6B6B78",
            "fontFamily": "Rubik",
            "fontSize": 14,
            "fontWeight": "400",
          },
        ]
      }
    >
      Helper Text
    </Text>
  </View>
</View>
`;

exports[`<Checkbox /> Snapshots should match snapshot without label 1`] = `
<View>
  <View
    accessibilityState={
      Object {
        "disabled": false,
      }
    }
    accessible={true}
    focusable={false}
    onClick={[Function]}
    onResponderGrant={[Function]}
    onResponderMove={[Function]}
    onResponderRelease={[Function]}
    onResponderTerminate={[Function]}
    onResponderTerminationRequest={[Function]}
    onStartShouldSetResponder={[Function]}
    style={
      Array [
        Object {
          "alignItems": "center",
          "flexDirection": "row",
        },
        Object {},
      ]
    }
  >
    <View
      style={
        Array [
          Object {
            "alignItems": "center",
            "height": 24,
            "justifyContent": "center",
            "width": 24,
          },
        ]
      }
    >
      <View
        checked={false}
        disabled={false}
        inverted={false}
        pressed={false}
        style={
          Array [
            Object {
              "backgroundColor": "transparent",
              "borderColor": "#D8385E",
              "borderRadius": 4,
              "borderStyle": "solid",
              "borderWidth": 2,
              "height": 24,
              "position": "absolute",
              "width": 24,
            },
          ]
        }
      />
    </View>
  </View>
</View>
`;

exports[`<Checkbox /> Snapshots should match snapshot without label 2`] = `
<View>
  <View
    accessibilityState={
      Object {
        "disabled": false,
      }
    }
    accessible={true}
    focusable={false}
    onClick={[Function]}
    onResponderGrant={[Function]}
    onResponderMove={[Function]}
    onResponderRelease={[Function]}
    onResponderTerminate={[Function]}
    onResponderTerminationRequest={[Function]}
    onStartShouldSetResponder={[Function]}
    style={
      Array [
        Object {
          "alignItems": "center",
          "flexDirection": "row",
        },
        Object {},
      ]
    }
  >
    <View
      style={
        Array [
          Object {
            "alignItems": "center",
            "height": 24,
            "justifyContent": "center",
            "width": 24,
          },
        ]
      }
    >
      <View
        checked={false}
        disabled={false}
        inverted={false}
        pressed={false}
        style={
          Array [
            Object {
              "backgroundColor": "transparent",
              "borderColor": "#D8385E",
              "borderRadius": 4,
              "borderStyle": "solid",
              "borderWidth": 2,
              "height": 24,
              "position": "absolute",
              "width": 24,
            },
          ]
        }
      />
    </View>
  </View>
</View>
`;
